{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-nexmoe/source/js/app.js","path":"js/app.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/css/color.styl","path":"css/color.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/css/dark.styl","path":"css/dark.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/demo.css","path":"lib/iconfont/demo.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/demo_index.html","path":"lib/iconfont/demo_index.html","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.css","path":"lib/iconfont/iconfont.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.eot","path":"lib/iconfont/iconfont.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.js","path":"lib/iconfont/iconfont.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.json","path":"lib/iconfont/iconfont.json","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.svg","path":"lib/iconfont/iconfont.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.ttf","path":"lib/iconfont/iconfont.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.woff","path":"lib/iconfont/iconfont.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.woff2","path":"lib/iconfont/iconfont.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/mdui_043tiny/js/mdui.js","path":"lib/mdui_043tiny/js/mdui.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/mdui_043tiny/css/mdui.css","path":"lib/mdui_043tiny/css/mdui.css","modified":0,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"b3a6e41cd090c601fa63a42af6c69786bf88351a","modified":1642648288501},{"_id":"source/my_archives.md","hash":"9b2aee8956cbb6aa382a9e745ef6f527394e7b4f","modified":1642912056716},{"_id":"source/favicon.ico","hash":"9207da3cb339f1bc93d5a8a9aa8ba720d35d02c8","modified":1644548467690},{"_id":"source/_posts/健身小白的入门.md","hash":"b0d3722d26c0da95378c94832a18017ca7ddcf85","modified":1644826416834},{"_id":"source/custom.css","hash":"bf0dab7edcb0da1090ae6f29744caaad07069408","modified":1643170038856},{"_id":"source/_posts/mmdetection的一些小坑.md","hash":"589d47d3e1efa975686f1c8552ecd476fe11a90a","modified":1644826398106},{"_id":"source/_posts/博客施工记录.md","hash":"bf04ea401e261406c71f14672319661e91006d9c","modified":1644826383549},{"_id":"source/_posts/博客施工记录/image-20220122110959737.png","hash":"e44ff4643f0f2ab368d5cc7e12516e67839ab465","modified":1642820999760},{"_id":"source/_posts/博客施工记录/image-20220122110435088.png","hash":"5c0edde1d9ccf4b6bed52e976466be119f64adf1","modified":1642820675107},{"_id":"node_modules/hexo-theme-nexmoe/_config.yml","hash":"7d580602ce3cff4ebe0d4c9bb37ab34e68d6947a","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/crowdin.yml","hash":"f9f02a9cab975c7de721c5dc4179b77870019cc6","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/LICENSE","hash":"b314c7ebb7d599944981908b7f3ed33a30e78f3a","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/index.js","hash":"3b35a075a534f60e546184fb98d5e7f91daf285c","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/package.json","hash":"2023cdcc96da50c4d44c8519a24c1c74889045ca","modified":1642573510565},{"_id":"node_modules/hexo-theme-nexmoe/renovate.json","hash":"767b077c7b615e20af3cf865813cd64674a9bea6","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/languages/default.yml","hash":"87a7e349b1b6783d843bb404701aa26f60fd6d3d","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/languages/en.yml","hash":"0a30904261c49e5fdb54c7141001eb48343692e1","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/README.md","hash":"0cb927059bd3289aac807a347da215d30eff061a","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/languages/it.yml","hash":"d50be2d5cbf5edfc0babf9c7e983e2abc0055435","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/languages/ja.yml","hash":"58ba070892fc0273576b99dd08bd0197f078a454","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/languages/ja-JP.yml","hash":"58ba070892fc0273576b99dd08bd0197f078a454","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/languages/zh-CN.yml","hash":"08782500dd6492ee6e4ab4b46b45b7739951e0a7","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/languages/zh-HK.yml","hash":"be00dd80d498d2bc98a27d16f7332d85e0660f6b","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/languages/zh-TW.yml","hash":"be00dd80d498d2bc98a27d16f7332d85e0660f6b","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/languages/zh.yml","hash":"9b1f6b8e3741d94ad8373912b9cba440c8652ea3","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/move_config.js","hash":"0c9e2c7bd3b6e17ba24be5d75a22f45c05b359a9","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/scripts/index.js","hash":"21ad4d662828fa13764720a2a0263e2f05afd22c","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/archives.ejs","hash":"2395fdfee67880c1c6b4796882c6fda67930f1f7","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/py.ejs","hash":"e52aa91d839a664c2b10c90b45550d2585012858","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/.github/ISSUE_TEMPLATE/feature_request_en.md","hash":"803f6736473a122ed78867e64681defcd2edd954","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/.github/ISSUE_TEMPLATE/bug_report_en.md","hash":"557484415c610222b16b58df470c2a768782c4fc","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"d6c77dbb2a3d638d748280fb37dd29375aebe98c","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"843abf5e1d7b06cb1feddd75f7025150d46a91c2","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/analytics.ejs","hash":"e53883f2bb9921cb08437f433d5d4d5cf52ab297","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/index.ejs","hash":"b61b9055799bb343bfea1cc7af243e11f0ec766e","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/comment.ejs","hash":"6e48ae4a79ad9e14d00244c15cd6e9ad04b99eb4","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/layout.ejs","hash":"301629266f49870cbedca8fc0ccc99646e65f5de","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/copyright.ejs","hash":"8ea3e7696217adb58345ec2b1fb83cfb62b4b317","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/paginator.ejs","hash":"4721e51e0ce36a91a3817f2549218f2813f8b204","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/after-footer.ejs","hash":"6da138c6408164bd7247f174fd035619049d5bb1","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/post.ejs","hash":"6cca9331c72fe382196d23e866148b19335b0406","modified":1643176710518},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/archive.ejs","hash":"2438c7647bab143de571bd41224784f097b60653","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/searchbox.ejs","hash":"424c6f805881a8e4761c4b628d9bab5f9f1417cc","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/sidebar.ejs","hash":"18da03e09bee5aa9aa24a1ae6b3e352c38d5e18c","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/site-verification.ejs","hash":"600319729da09e366c05e104fe68a821b087c027","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/link.ejs","hash":"d9104aa53f57a99d59ed1a06b3e1abca93082945","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/recent_posts.ejs","hash":"7d9eaf8228eda803aa4956e55432f78e056d6a01","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/social.ejs","hash":"d0f2a8386de1a08deb431a6fa9a3f4a299d0cd1a","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/tag.ejs","hash":"ddf844f08124454bea2a30f8349b63f3cb63ac16","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/category.ejs","hash":"99113b9f2cb4ffefdda3e3a343647ac6a5083091","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/scripts/helper/image_filter.js","hash":"b1f23e114b722854e0e4493a2b07ad9d1f399259","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/search.ejs","hash":"564b8b6acf2d242ae137416a3c33f2252b000000","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/scripts/helper/css_auto_version.js","hash":"63c90dac6ad0a102ef302bf9fd9e030d521a8232","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/scripts/helper/js_auto_version.js","hash":"98cf6f7edcca3d54ede63556751b1e4f896c7016","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/header.ejs","hash":"34fc02c788c237c13ad2619a7ae3b8b572384860","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/scripts/tag/gallery.js","hash":"a359add30a0106f06cc4bd6b997abc107d751f00","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/tagcloud.ejs","hash":"6636a70e3ed871f2e90550d37b773c951817f143","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/js/search.js","hash":"4d93153b6bd29f363db709f1226fcad6eae680ae","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/js/app.js","hash":"cdbd658532f0880564c61e983be0c5bc06e91b97","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_analytics/cnzz.ejs","hash":"345ed559b76930bed05e1b393c12f09d42c2312e","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_analytics/baidu.ejs","hash":"cc782e1363c8bbb6277c3825bb9eac83762bc26d","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/color.styl","hash":"144a506ebe863499e7fa769c946fdbec821bce3f","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/dark.styl","hash":"a5630003e6b5cf5b083c309a7a7e9ab8eb221a73","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_analytics/google.ejs","hash":"97f3a717495c8cc71d5d3c7ab69ddd589a69a038","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_analytics/gtags.ejs","hash":"2c429eef83e712531a08de370b06f1f00ac7398b","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_analytics/gtm-head.ejs","hash":"5638bed9cfe2e86aeee77adc883b2a3e1ecd76ff","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_analytics/gtm-body.ejs","hash":"1471e3a49ad6c93fd33b18545b43805c48695e23","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_analytics/tencent.ejs","hash":"6f7d514f157fbdb505e52dda2dc4f35dcdb2685e","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_comment/DiscussBot.ejs","hash":"92fb25b5204b325eb18eea0c15ddb4f4116e35e2","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_analytics/la.ejs","hash":"e08b1f111068c62e625b6790e66d8a5f625246ba","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/style.styl","hash":"1914bf3e3b7dc7ad8ce194eb225c3f34edcb165d","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_comment/gitalk.ejs","hash":"a3a33112234fee49646a9c11fcbdf2ed1a7777a8","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_comment/gitment.ejs","hash":"d4a99db9f2daf7bcdbcf637f478d925d5d840fe4","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_comment/disqusjs.ejs","hash":"7518e88f2504b9844f71190e079df07f51847472","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_post/meta.ejs","hash":"b1e91c394003cffb7f73ecf09162f41543cbf970","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_comment/livere.ejs","hash":"e96e1510ba2a8ccb1edebc378c566fadaed09e50","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_comment/valine.ejs","hash":"97a699da23500cd6b16c857a60d123064d1653f9","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_post/tag.ejs","hash":"c265ae74f31bb046922a052bb7d5eef4416d1357","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_comment/changyan.ejs","hash":"8a520fd9a9704208c23abcb689bae33acd1167db","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_comment/disqus.ejs","hash":"e1e70a619cf3499ef8b054c8fb4b23865a554b6b","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/archives.styl","hash":"db98414c8c017681bf2e8c85b978a15b5c0eea86","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/py.styl","hash":"830cadb47885d63a407311be3e8c8116a47d904e","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/article.styl","hash":"36065f96a091694ba3502138ac58c5b8b4e50c30","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/searchbox.styl","hash":"48362ece95f68eacab3f61945bf070c03dcc0754","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/demo_index.html","hash":"a82acbfeabc50a6668ebf6115b5c5c3d308079b6","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/demo.css","hash":"53456972a11d52af67187fc17999e6665f9f06fe","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.eot","hash":"1d1851c2197382a9b7cd3b3fcdef79a61ad331f6","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.json","hash":"0dd0193f6f400e5da6d3aef89f76c22c79e0f396","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.js","hash":"bac40fc7b766297cbf645849e583e8cd6496b2d2","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.ttf","hash":"b0f4b5501cbcaeaf15dc608359574a29bc4c4265","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.svg","hash":"2af6d26577c3ae2ca126351f0be764cbae9da6ff","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_dark/_partial/article.styl","hash":"bae11ad4e3ef0af145754c0c271d7c59f2551314","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.woff2","hash":"9209e4f7e45d37e58356e5ede7ea9d6d9e922d77","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.css","hash":"3566d949bdc045cd816be382d180b796e0a78748","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_dark/_comment/gitment.styl","hash":"296e23c580d394d4d65c5b47ec91dde3a2e61fdb","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_dark/_partial/searchbox.styl","hash":"980b69e46739f5bade3f2ee8fc92b671e232ab9f","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_dark/_comment/gitalk.styl","hash":"b8c4671d6fab48ca204b160a00d9aae8ab4ab23d","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.woff","hash":"e292802913e6c248a17797dc24ecfc0a3473c3cf","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_dark/_comment/valine.styl","hash":"eeaf065d845e56330277b2d1a5b3a4d5c458400e","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/mdui_043tiny/css/mdui.css","hash":"1500b5d27b8ce2e7c543bb6d7205de43059378db","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/mdui_043tiny/js/mdui.js","hash":"1b3f4e4b7d1b944dd2a8ca09cc60614435195c67","modified":499162500000},{"_id":"node_modules/hexo-theme-nexmoe/cover.png","hash":"23d58c5a7f388514246d49f27f1529be3fdbe09d","modified":499162500000},{"_id":"source/_posts/博客施工记录/illust_95296062_20220118_234600.jpg","hash":"dd6a2994f03b42fe2ce78bcf70c22de52f167f0e","modified":1642924696594},{"_id":"source/_posts/pip与conda换源.md","hash":"3218717c4c25953cd6a4b62288506edf46914c33","modified":1644826338445},{"_id":"public/custom.css","hash":"bf0dab7edcb0da1090ae6f29744caaad07069408","modified":1644809125774},{"_id":"public/content.json","hash":"cfaa3ee1007dd58049ae777b91806d2ff217f329","modified":1644826425086},{"_id":"public/archive.html","hash":"a7a685f45993ed571c06f4d4cf66941955c8d0c8","modified":1644826425086},{"_id":"public/2022/02/14/e12fbaadf62f/index.html","hash":"0637619a42389bf3562fbcaf4e0f9461288e5d64","modified":1644826425086},{"_id":"public/2022/02/08/cb9e10900f12/index.html","hash":"c5835d62919aee37bbc8cdfac4adc6294b153631","modified":1644826425086},{"_id":"public/archives/index.html","hash":"454390b19f748834ab61574f7069913f9c728683","modified":1644826425086},{"_id":"public/archives/2022/index.html","hash":"0e463d5c4e2b29bb8bbf54ed3f2a7bc8108f39b4","modified":1644826425086},{"_id":"public/archives/2022/01/index.html","hash":"9c6577406ddb0f9b989c942bdc895d6ee87ffe56","modified":1644826425086},{"_id":"public/archives/2022/02/index.html","hash":"9166578ce708e9c378f950ad99fbca94d19421fc","modified":1644826425086},{"_id":"public/tags/健身/index.html","hash":"f1ef388437c7cecddf2eb82ea23c603554546e1c","modified":1644826425086},{"_id":"public/tags/mmdetection/index.html","hash":"3c59bafefe899dd71ca56eca6fd041cbcf3a3129","modified":1644826425086},{"_id":"public/tags/目标检测/index.html","hash":"13ea977507965236d1cc262b187363c8794733f2","modified":1644826425086},{"_id":"public/tags/hexo/index.html","hash":"d1de8d5cce3afba7610a3d5237d1241dfa8c3ab1","modified":1644826425086},{"_id":"public/tags/Github-Actions/index.html","hash":"38469b98c2398b00df7f43eda46185f9e44e1a72","modified":1644826425086},{"_id":"public/tags/blog/index.html","hash":"0dd7322335968ea9b44cf11e65d72cb80472fb01","modified":1644826425086},{"_id":"public/tags/pip/index.html","hash":"ad913c960e24bdfd8bac6a2ad53107a7bdf3bb75","modified":1644826425086},{"_id":"public/tags/conda/index.html","hash":"6d5b1835ceccae8ee454d3771ebc455f3948e226","modified":1644826425086},{"_id":"public/categories/健身/index.html","hash":"1c94830bd992497f28d3fd837aee5604ac7c52c4","modified":1644826425086},{"_id":"public/categories/环境搭建/index.html","hash":"3f53d2bb88c7b35b43b1565ceacd58ddebc5cdfd","modified":1644826425086},{"_id":"public/index.html","hash":"e3428cb173e507595186220dc5425af26f7e3ae5","modified":1644826425086},{"_id":"public/2022/01/23/a04a392a8742/index.html","hash":"f3f9c79615fff15493a5f6f96c097537759e777c","modified":1644826425086},{"_id":"public/2022/01/18/ebc99e4d4103/index.html","hash":"ccd1672db3d7cf8d59ab6b267736ef95cab53f4d","modified":1644826425086},{"_id":"public/lib/iconfont/iconfont.eot","hash":"1d1851c2197382a9b7cd3b3fcdef79a61ad331f6","modified":1644809125774},{"_id":"public/lib/iconfont/iconfont.svg","hash":"2af6d26577c3ae2ca126351f0be764cbae9da6ff","modified":1644809125774},{"_id":"public/lib/iconfont/iconfont.ttf","hash":"b0f4b5501cbcaeaf15dc608359574a29bc4c4265","modified":1644809125774},{"_id":"public/lib/iconfont/iconfont.woff","hash":"e292802913e6c248a17797dc24ecfc0a3473c3cf","modified":1644809125774},{"_id":"public/CNAME","hash":"b3a6e41cd090c601fa63a42af6c69786bf88351a","modified":1644809125774},{"_id":"public/lib/iconfont/iconfont.woff2","hash":"9209e4f7e45d37e58356e5ede7ea9d6d9e922d77","modified":1644809125774},{"_id":"public/favicon.ico","hash":"9207da3cb339f1bc93d5a8a9aa8ba720d35d02c8","modified":1644809125774},{"_id":"public/js/app.js","hash":"1b4b63d72d796143d93b65e9e230110a314d5de9","modified":1644809125774},{"_id":"public/js/search.js","hash":"718593d468a4c3607dd30878e7fb6ab4b20e62f4","modified":1644809125774},{"_id":"public/css/color.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1644809125774},{"_id":"public/css/dark.css","hash":"83d343b9e2660741eaef704ff048672e79c96b9b","modified":1644809125774},{"_id":"public/lib/iconfont/demo.css","hash":"65c50db528a5abe06426b1a20735feaf1f2a0d9b","modified":1644809125774},{"_id":"public/lib/iconfont/iconfont.css","hash":"01952f8f10c716cbb463b589a345e46f1b8cc101","modified":1644809125774},{"_id":"public/lib/iconfont/iconfont.json","hash":"8fbdca1d1886c8c6d9bfe1fb105595c65050a175","modified":1644809125774},{"_id":"public/css/style.css","hash":"2cfac51715e7bc07703230480767313311b2dbb0","modified":1644809125774},{"_id":"public/lib/iconfont/demo_index.html","hash":"df3f126af2695d3dd839edcfda49b951b02f701e","modified":1644809125774},{"_id":"public/lib/iconfont/iconfont.js","hash":"bac40fc7b766297cbf645849e583e8cd6496b2d2","modified":1644809125774},{"_id":"public/lib/mdui_043tiny/js/mdui.js","hash":"9feeebf8c11d8ce8549ec94896c630ba2334613c","modified":1644809125774},{"_id":"public/lib/mdui_043tiny/css/mdui.css","hash":"b79ef94d2b11f8ce05ba048f5d74a3bd09f12e4d","modified":1644809125774}],"Category":[{"name":"健身","_id":"ckzi2bho80004aswz0o4rc3um"},{"name":"环境搭建","_id":"ckzi2bho90006aswzfa4c21il"}],"Data":[],"Page":[{"_content":".nexmoe-post {\n  border-radius: 16px;\n  box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);\n}\n\n.nexmoe-post article {\n  padding: 15px;\n}\n\n/* clipboard代码块 */\n\n\n/*\ncode {\n  padding: 1px 5px;\n  font-family: Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace;\n  color: #e96900;\n  background-color: #f8f8f8;\n  border-radius: 2px;\n}\n\npre code {\n  padding: 0;\n  color: #e8eaf6;\n  background-color: #272822;\n}\n\npre[class*=\"language-\"] {\n  padding: 1.2em;\n  margin: .5em 0;\n}\n\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n  color: #e8eaf6;\n  white-space: pre-wrap !important;\n}\n\n.line-numbers-rows {\n  border-right-width: 0px !important;\n}\n\n.line-numbers {\n  padding: 1.5rem 1.5rem 1.5rem 3.2rem !important;\n  margin: 1rem 0 !important;\n  background: #272822;\n  overflow: auto;\n  border-radius: 0.35rem;\n  tab-size: 4;\n}\n\n\npre {\n  padding: 1.5rem !important;\n  margin: 1rem 0 !important;\n  background: #272822;\n  overflow: auto;\n  border-radius: 0.35rem;\n  tab-size: 4;\n}\n\npre::before {\n  content: \"\";\n  height: 16px;\n  margin-bottom: 0;\n  display: block;\n}\n\npre::after {\n  content: \" \";\n  position: absolute;\n  border-radius: 50%;\n  background: #ff5f56;\n  width: 12px;\n  height: 12px;\n  top: 0;\n  left: 12px;\n  margin-top: 12px;\n  -webkit-box-shadow: 20px 0 #ffbd2e, 40px 0 #27c93f;\n  box-shadow: 20px 0 #ffbd2e, 40px 0 #27c93f;\n}\n\ncode {\n  padding: 1px 5px;\n  font-family: Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace;\n  font-size: 0.91rem;\n  color: #e96900;\n  background-color: #f8f8f8;\n  border-radius: 2px;\n}\n\n.code_copy {\n  position: absolute;\n  top: 0.7rem;\n  right: 35px;\n  z-index: 1;\n  filter: invert(50%);\n  cursor: pointer;\n}\n\n.code_lang {\n  position: absolute;\n  top: 1.2rem;\n  right: 60px;\n  line-height: 0;\n  font-weight: bold;\n  font-family: normal;\n  z-index: 1;\n  filter: invert(50%);\n  cursor: pointer;\n}\n\n.code-expand {\n  position: absolute;\n  top: 4px;\n  right: 0px;\n  filter: invert(50%);\n  padding: 7px 10px;\n  z-index: 1;\n  cursor: pointer;\n  transition: all .3s;\n  transform: rotate(0deg);\n}\n\n.code-closed .code-expand {\n  transform: rotate(-180deg) !important;\n  transition: all .3s;\n}\n\n.code-closed pre::before {\n  height: 0px;\n}\n\npre code {\n  padding: 0;\n  color: #e8eaf6;\n  background-color: #272822;\n}\n\npre[class*=\"language-\"] {\n  padding: 1.2em;\n  margin: .5em 0;\n}\n\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n  color: #e8eaf6;\n  white-space: pre-wrap !important;\n}\n*/","source":"custom.css","raw":".nexmoe-post {\n  border-radius: 16px;\n  box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);\n}\n\n.nexmoe-post article {\n  padding: 15px;\n}\n\n/* clipboard代码块 */\n\n\n/*\ncode {\n  padding: 1px 5px;\n  font-family: Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace;\n  color: #e96900;\n  background-color: #f8f8f8;\n  border-radius: 2px;\n}\n\npre code {\n  padding: 0;\n  color: #e8eaf6;\n  background-color: #272822;\n}\n\npre[class*=\"language-\"] {\n  padding: 1.2em;\n  margin: .5em 0;\n}\n\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n  color: #e8eaf6;\n  white-space: pre-wrap !important;\n}\n\n.line-numbers-rows {\n  border-right-width: 0px !important;\n}\n\n.line-numbers {\n  padding: 1.5rem 1.5rem 1.5rem 3.2rem !important;\n  margin: 1rem 0 !important;\n  background: #272822;\n  overflow: auto;\n  border-radius: 0.35rem;\n  tab-size: 4;\n}\n\n\npre {\n  padding: 1.5rem !important;\n  margin: 1rem 0 !important;\n  background: #272822;\n  overflow: auto;\n  border-radius: 0.35rem;\n  tab-size: 4;\n}\n\npre::before {\n  content: \"\";\n  height: 16px;\n  margin-bottom: 0;\n  display: block;\n}\n\npre::after {\n  content: \" \";\n  position: absolute;\n  border-radius: 50%;\n  background: #ff5f56;\n  width: 12px;\n  height: 12px;\n  top: 0;\n  left: 12px;\n  margin-top: 12px;\n  -webkit-box-shadow: 20px 0 #ffbd2e, 40px 0 #27c93f;\n  box-shadow: 20px 0 #ffbd2e, 40px 0 #27c93f;\n}\n\ncode {\n  padding: 1px 5px;\n  font-family: Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace;\n  font-size: 0.91rem;\n  color: #e96900;\n  background-color: #f8f8f8;\n  border-radius: 2px;\n}\n\n.code_copy {\n  position: absolute;\n  top: 0.7rem;\n  right: 35px;\n  z-index: 1;\n  filter: invert(50%);\n  cursor: pointer;\n}\n\n.code_lang {\n  position: absolute;\n  top: 1.2rem;\n  right: 60px;\n  line-height: 0;\n  font-weight: bold;\n  font-family: normal;\n  z-index: 1;\n  filter: invert(50%);\n  cursor: pointer;\n}\n\n.code-expand {\n  position: absolute;\n  top: 4px;\n  right: 0px;\n  filter: invert(50%);\n  padding: 7px 10px;\n  z-index: 1;\n  cursor: pointer;\n  transition: all .3s;\n  transform: rotate(0deg);\n}\n\n.code-closed .code-expand {\n  transform: rotate(-180deg) !important;\n  transition: all .3s;\n}\n\n.code-closed pre::before {\n  height: 0px;\n}\n\npre code {\n  padding: 0;\n  color: #e8eaf6;\n  background-color: #272822;\n}\n\npre[class*=\"language-\"] {\n  padding: 1.2em;\n  margin: .5em 0;\n}\n\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n  color: #e8eaf6;\n  white-space: pre-wrap !important;\n}\n*/","date":"2022-01-26T04:07:18.856Z","updated":"2022-01-26T04:07:18.856Z","path":"custom.css","layout":"false","title":"","comments":1,"_id":"ckzi2bho00000aswzeau0emh4","content":".nexmoe-post {\n  border-radius: 16px;\n  box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);\n}\n\n.nexmoe-post article {\n  padding: 15px;\n}\n\n/* clipboard代码块 */\n\n\n/*\ncode {\n  padding: 1px 5px;\n  font-family: Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace;\n  color: #e96900;\n  background-color: #f8f8f8;\n  border-radius: 2px;\n}\n\npre code {\n  padding: 0;\n  color: #e8eaf6;\n  background-color: #272822;\n}\n\npre[class*=\"language-\"] {\n  padding: 1.2em;\n  margin: .5em 0;\n}\n\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n  color: #e8eaf6;\n  white-space: pre-wrap !important;\n}\n\n.line-numbers-rows {\n  border-right-width: 0px !important;\n}\n\n.line-numbers {\n  padding: 1.5rem 1.5rem 1.5rem 3.2rem !important;\n  margin: 1rem 0 !important;\n  background: #272822;\n  overflow: auto;\n  border-radius: 0.35rem;\n  tab-size: 4;\n}\n\n\npre {\n  padding: 1.5rem !important;\n  margin: 1rem 0 !important;\n  background: #272822;\n  overflow: auto;\n  border-radius: 0.35rem;\n  tab-size: 4;\n}\n\npre::before {\n  content: \"\";\n  height: 16px;\n  margin-bottom: 0;\n  display: block;\n}\n\npre::after {\n  content: \" \";\n  position: absolute;\n  border-radius: 50%;\n  background: #ff5f56;\n  width: 12px;\n  height: 12px;\n  top: 0;\n  left: 12px;\n  margin-top: 12px;\n  -webkit-box-shadow: 20px 0 #ffbd2e, 40px 0 #27c93f;\n  box-shadow: 20px 0 #ffbd2e, 40px 0 #27c93f;\n}\n\ncode {\n  padding: 1px 5px;\n  font-family: Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace;\n  font-size: 0.91rem;\n  color: #e96900;\n  background-color: #f8f8f8;\n  border-radius: 2px;\n}\n\n.code_copy {\n  position: absolute;\n  top: 0.7rem;\n  right: 35px;\n  z-index: 1;\n  filter: invert(50%);\n  cursor: pointer;\n}\n\n.code_lang {\n  position: absolute;\n  top: 1.2rem;\n  right: 60px;\n  line-height: 0;\n  font-weight: bold;\n  font-family: normal;\n  z-index: 1;\n  filter: invert(50%);\n  cursor: pointer;\n}\n\n.code-expand {\n  position: absolute;\n  top: 4px;\n  right: 0px;\n  filter: invert(50%);\n  padding: 7px 10px;\n  z-index: 1;\n  cursor: pointer;\n  transition: all .3s;\n  transform: rotate(0deg);\n}\n\n.code-closed .code-expand {\n  transform: rotate(-180deg) !important;\n  transition: all .3s;\n}\n\n.code-closed pre::before {\n  height: 0px;\n}\n\npre code {\n  padding: 0;\n  color: #e8eaf6;\n  background-color: #272822;\n}\n\npre[class*=\"language-\"] {\n  padding: 1.2em;\n  margin: .5em 0;\n}\n\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n  color: #e8eaf6;\n  white-space: pre-wrap !important;\n}\n*/","site":{"data":{}},"excerpt":"","more":".nexmoe-post {\n  border-radius: 16px;\n  box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);\n}\n\n.nexmoe-post article {\n  padding: 15px;\n}\n\n/* clipboard代码块 */\n\n\n/*\ncode {\n  padding: 1px 5px;\n  font-family: Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace;\n  color: #e96900;\n  background-color: #f8f8f8;\n  border-radius: 2px;\n}\n\npre code {\n  padding: 0;\n  color: #e8eaf6;\n  background-color: #272822;\n}\n\npre[class*=\"language-\"] {\n  padding: 1.2em;\n  margin: .5em 0;\n}\n\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n  color: #e8eaf6;\n  white-space: pre-wrap !important;\n}\n\n.line-numbers-rows {\n  border-right-width: 0px !important;\n}\n\n.line-numbers {\n  padding: 1.5rem 1.5rem 1.5rem 3.2rem !important;\n  margin: 1rem 0 !important;\n  background: #272822;\n  overflow: auto;\n  border-radius: 0.35rem;\n  tab-size: 4;\n}\n\n\npre {\n  padding: 1.5rem !important;\n  margin: 1rem 0 !important;\n  background: #272822;\n  overflow: auto;\n  border-radius: 0.35rem;\n  tab-size: 4;\n}\n\npre::before {\n  content: \"\";\n  height: 16px;\n  margin-bottom: 0;\n  display: block;\n}\n\npre::after {\n  content: \" \";\n  position: absolute;\n  border-radius: 50%;\n  background: #ff5f56;\n  width: 12px;\n  height: 12px;\n  top: 0;\n  left: 12px;\n  margin-top: 12px;\n  -webkit-box-shadow: 20px 0 #ffbd2e, 40px 0 #27c93f;\n  box-shadow: 20px 0 #ffbd2e, 40px 0 #27c93f;\n}\n\ncode {\n  padding: 1px 5px;\n  font-family: Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace;\n  font-size: 0.91rem;\n  color: #e96900;\n  background-color: #f8f8f8;\n  border-radius: 2px;\n}\n\n.code_copy {\n  position: absolute;\n  top: 0.7rem;\n  right: 35px;\n  z-index: 1;\n  filter: invert(50%);\n  cursor: pointer;\n}\n\n.code_lang {\n  position: absolute;\n  top: 1.2rem;\n  right: 60px;\n  line-height: 0;\n  font-weight: bold;\n  font-family: normal;\n  z-index: 1;\n  filter: invert(50%);\n  cursor: pointer;\n}\n\n.code-expand {\n  position: absolute;\n  top: 4px;\n  right: 0px;\n  filter: invert(50%);\n  padding: 7px 10px;\n  z-index: 1;\n  cursor: pointer;\n  transition: all .3s;\n  transform: rotate(0deg);\n}\n\n.code-closed .code-expand {\n  transform: rotate(-180deg) !important;\n  transition: all .3s;\n}\n\n.code-closed pre::before {\n  height: 0px;\n}\n\npre code {\n  padding: 0;\n  color: #e8eaf6;\n  background-color: #272822;\n}\n\npre[class*=\"language-\"] {\n  padding: 1.2em;\n  margin: .5em 0;\n}\n\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n  color: #e8eaf6;\n  white-space: pre-wrap !important;\n}\n*/"},{"title":"文章归档","layout":"archives","_content":"\n","source":"my_archives.md","raw":"---\ntitle: 文章归档\nlayout: archives\npermalink: archive.html\n---\n\n","date":"2022-01-23T04:27:36.716Z","updated":"2022-01-23T04:27:36.716Z","path":"archive.html","comments":1,"_id":"ckzi2bho60002aswz8ay59j92","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"健身小白的入门","reprint":false,"date":"2022-02-08T13:36:48.000Z","updated":"2022-02-08T13:36:48.000Z","conver":null,"_content":"\n逢年过节胖三斤，真不是说着玩的。终于下定决心要健身了。看着健身房一堆器材着实发愁，不知道从何下手。在这里稍微汇总一下查阅的资料。当然，最重要的还是**坚持，坚持，坚持！**\n\n<!--more-->\n\n首先健身房一般分个区域。有氧区、固定器械区、自由器械区、多功能区。小白力量训练的话主要从固定器械区入手。\n\n主要练习方式有三阶段或五阶段，三阶段包括：，五阶段包括：胸、肩、背、腹、腿。每次训练选择2-3个肌肉群进行训练。其中腹肌恢复较快，可连续训练。\n\n## 常见器械\n\n### 胸肌肉群\n\n\n\n### 肩肌肉群\n\n### 背肌肉群\n\n### 腹肌肉群\n\n### 腿肌肉群\n\n## 计划表\n\n| 星期一       | 星期三       | 星期五       |\n| ------------ | ------------ | ------------ |\n| 胸部：<br /> | 背部：<br /> | 腿部：<br /> |\n| 腹部：<br /> | 肩臂：<br /> | 腹部：<br /> |\n|              |              |              |\n\n### 注意事项\n\n**渐进负荷 先加重量 加不了了加个数 加不了了加组数**\n\n运动前后一定要拉伸\n\n有氧运动：肌肉、关节、韧带热身——有氧运动（跑步、跳绳、骑单车、椭圆机、登山机、单车）——静态放松肌肉拉伸\n\n无氧运动：目标肌肉的热身——复合动作+孤立动作——组间休息——有氧运动——静态放松肌肉拉伸\n\n### 拉伸\n\n","source":"_posts/健身小白的入门.md","raw":"---\ntitle: 健身小白的入门\nreprint: false\ndate: 2022-02-08 21:36:48\nupdated: 2022-02-08 21:36:48\nconver:\ncategories: 健身\ntags:\n  - 健身\n---\n\n逢年过节胖三斤，真不是说着玩的。终于下定决心要健身了。看着健身房一堆器材着实发愁，不知道从何下手。在这里稍微汇总一下查阅的资料。当然，最重要的还是**坚持，坚持，坚持！**\n\n<!--more-->\n\n首先健身房一般分个区域。有氧区、固定器械区、自由器械区、多功能区。小白力量训练的话主要从固定器械区入手。\n\n主要练习方式有三阶段或五阶段，三阶段包括：，五阶段包括：胸、肩、背、腹、腿。每次训练选择2-3个肌肉群进行训练。其中腹肌恢复较快，可连续训练。\n\n## 常见器械\n\n### 胸肌肉群\n\n\n\n### 肩肌肉群\n\n### 背肌肉群\n\n### 腹肌肉群\n\n### 腿肌肉群\n\n## 计划表\n\n| 星期一       | 星期三       | 星期五       |\n| ------------ | ------------ | ------------ |\n| 胸部：<br /> | 背部：<br /> | 腿部：<br /> |\n| 腹部：<br /> | 肩臂：<br /> | 腹部：<br /> |\n|              |              |              |\n\n### 注意事项\n\n**渐进负荷 先加重量 加不了了加个数 加不了了加组数**\n\n运动前后一定要拉伸\n\n有氧运动：肌肉、关节、韧带热身——有氧运动（跑步、跳绳、骑单车、椭圆机、登山机、单车）——静态放松肌肉拉伸\n\n无氧运动：目标肌肉的热身——复合动作+孤立动作——组间休息——有氧运动——静态放松肌肉拉伸\n\n### 拉伸\n\n","slug":"健身小白的入门","published":1,"_id":"ckzi2bho30001aswzbb5cgoar","comments":1,"layout":"post","photos":[],"link":"","content":"<p>逢年过节胖三斤，真不是说着玩的。终于下定决心要健身了。看着健身房一堆器材着实发愁，不知道从何下手。在这里稍微汇总一下查阅的资料。当然，最重要的还是<strong>坚持，坚持，坚持！</strong></p>\n<span id=\"more\"></span>\n\n<p>首先健身房一般分个区域。有氧区、固定器械区、自由器械区、多功能区。小白力量训练的话主要从固定器械区入手。</p>\n<p>主要练习方式有三阶段或五阶段，三阶段包括：，五阶段包括：胸、肩、背、腹、腿。每次训练选择2-3个肌肉群进行训练。其中腹肌恢复较快，可连续训练。</p>\n<h2 id=\"常见器械\"><a href=\"#常见器械\" class=\"headerlink\" title=\"常见器械\"></a>常见器械</h2><h3 id=\"胸肌肉群\"><a href=\"#胸肌肉群\" class=\"headerlink\" title=\"胸肌肉群\"></a>胸肌肉群</h3><h3 id=\"肩肌肉群\"><a href=\"#肩肌肉群\" class=\"headerlink\" title=\"肩肌肉群\"></a>肩肌肉群</h3><h3 id=\"背肌肉群\"><a href=\"#背肌肉群\" class=\"headerlink\" title=\"背肌肉群\"></a>背肌肉群</h3><h3 id=\"腹肌肉群\"><a href=\"#腹肌肉群\" class=\"headerlink\" title=\"腹肌肉群\"></a>腹肌肉群</h3><h3 id=\"腿肌肉群\"><a href=\"#腿肌肉群\" class=\"headerlink\" title=\"腿肌肉群\"></a>腿肌肉群</h3><h2 id=\"计划表\"><a href=\"#计划表\" class=\"headerlink\" title=\"计划表\"></a>计划表</h2><table>\n<thead>\n<tr>\n<th>星期一</th>\n<th>星期三</th>\n<th>星期五</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>胸部：<br /></td>\n<td>背部：<br /></td>\n<td>腿部：<br /></td>\n</tr>\n<tr>\n<td>腹部：<br /></td>\n<td>肩臂：<br /></td>\n<td>腹部：<br /></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p><strong>渐进负荷 先加重量 加不了了加个数 加不了了加组数</strong></p>\n<p>运动前后一定要拉伸</p>\n<p>有氧运动：肌肉、关节、韧带热身——有氧运动（跑步、跳绳、骑单车、椭圆机、登山机、单车）——静态放松肌肉拉伸</p>\n<p>无氧运动：目标肌肉的热身——复合动作+孤立动作——组间休息——有氧运动——静态放松肌肉拉伸</p>\n<h3 id=\"拉伸\"><a href=\"#拉伸\" class=\"headerlink\" title=\"拉伸\"></a>拉伸</h3>","site":{"data":{}},"excerpt":"<p>逢年过节胖三斤，真不是说着玩的。终于下定决心要健身了。看着健身房一堆器材着实发愁，不知道从何下手。在这里稍微汇总一下查阅的资料。当然，最重要的还是<strong>坚持，坚持，坚持！</strong></p>","more":"<p>首先健身房一般分个区域。有氧区、固定器械区、自由器械区、多功能区。小白力量训练的话主要从固定器械区入手。</p>\n<p>主要练习方式有三阶段或五阶段，三阶段包括：，五阶段包括：胸、肩、背、腹、腿。每次训练选择2-3个肌肉群进行训练。其中腹肌恢复较快，可连续训练。</p>\n<h2 id=\"常见器械\"><a href=\"#常见器械\" class=\"headerlink\" title=\"常见器械\"></a>常见器械</h2><h3 id=\"胸肌肉群\"><a href=\"#胸肌肉群\" class=\"headerlink\" title=\"胸肌肉群\"></a>胸肌肉群</h3><h3 id=\"肩肌肉群\"><a href=\"#肩肌肉群\" class=\"headerlink\" title=\"肩肌肉群\"></a>肩肌肉群</h3><h3 id=\"背肌肉群\"><a href=\"#背肌肉群\" class=\"headerlink\" title=\"背肌肉群\"></a>背肌肉群</h3><h3 id=\"腹肌肉群\"><a href=\"#腹肌肉群\" class=\"headerlink\" title=\"腹肌肉群\"></a>腹肌肉群</h3><h3 id=\"腿肌肉群\"><a href=\"#腿肌肉群\" class=\"headerlink\" title=\"腿肌肉群\"></a>腿肌肉群</h3><h2 id=\"计划表\"><a href=\"#计划表\" class=\"headerlink\" title=\"计划表\"></a>计划表</h2><table>\n<thead>\n<tr>\n<th>星期一</th>\n<th>星期三</th>\n<th>星期五</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>胸部：<br /></td>\n<td>背部：<br /></td>\n<td>腿部：<br /></td>\n</tr>\n<tr>\n<td>腹部：<br /></td>\n<td>肩臂：<br /></td>\n<td>腹部：<br /></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p><strong>渐进负荷 先加重量 加不了了加个数 加不了了加组数</strong></p>\n<p>运动前后一定要拉伸</p>\n<p>有氧运动：肌肉、关节、韧带热身——有氧运动（跑步、跳绳、骑单车、椭圆机、登山机、单车）——静态放松肌肉拉伸</p>\n<p>无氧运动：目标肌肉的热身——复合动作+孤立动作——组间休息——有氧运动——静态放松肌肉拉伸</p>\n<h3 id=\"拉伸\"><a href=\"#拉伸\" class=\"headerlink\" title=\"拉伸\"></a>拉伸</h3>"},{"title":"mmdetection的一些小坑","reprint":false,"cover":null,"date":"2022-01-23T04:46:21.000Z","updated":"2022-01-23T04:46:21.000Z","_content":"\n记录一下使用mmdetection中遇到的一些坑，方便查阅。\n\n<!--more-->\n\n# 安装\n\npip install mmcv-full==1.3.9 -f https://download.openmmlab.com/mmcv/dist/cu111/torch1.9.0/index.html\n\npip install mmcv-full==1.3.9 -f https://download.openmmlab.com/mmcv/dist/cu101/torch1.7.0/index.html\n\n修改完后，需要重新编译（python setup.py install)\n\npip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cu111/{torch_version}/index.html\n\npip install mmcv-full==1.3.3 -f https://download.openmmlab.com/mmcv/dist/cu111/torch1.8.0/index.html \n\npip install -r requirements/build.txt\npython setup.py develop\n\n\n\n# 修改数据集为coco格式\n\n目录格式：\n\n```\nmmdetection\n├── mmdet\n├── tools\n├── configs\n├── data\n│   ├── coco\n│   │   ├── annotations\n│   │   ├── train2017\n│   │   ├── val2017\n│   │   ├── test2017\n```\n\n修改相关文件：\n\n[(4条消息) mmdetection自定义数据集进行训练_xiangxianghehe的博客-CSDN博客_mmdetection 训练数据集](https://blog.csdn.net/xiangxianghehe/article/details/89812058#commentsedit)\n\n\n\n\n\n# 常用命令\n\n## 测试与训练\n\npython tools/test.py configs/faster_rcnn/faster_rcnn_r50_fpn\n_1x_coco.py checkpoints/epoch_2.pth --show\n\npython tools/train.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py\n\npython tools/test.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py checkpoints/{model}/latest.pth --out results/{model}/results.pkl --show-dir results/\n\n```\npython tools/test.py configs/fcos/fcos_r50_caffe_fpn_gn-head_1x_coco.py checkpoints/latest.pth --out results/fcos_r50_caffe_fpn_gn-head_1x_coco/results.pkl --show-dir results/\n```\n\n## train参数\n\nThis tool accepts several optional arguments, including:\n\n- `--no-validate` (**not suggested**): Disable evaluation during training.\n- `--work-dir ${WORK_DIR}`: Override the working directory.\n- `--resume-from ${CHECKPOINT_FILE}`: Resume from a previous checkpoint file.\n- `--options 'Key=value'`: Overrides other settings in the used config.\n\n## 查看config\n\npython tools/misc/print_config.py configs/zr/zr_fcos_r50_caffe_fpn_gn-head_1x_coco.py\n\n## 学习率配置\n\nX：我的一个batchsize输入图像数量\nY：mmdetction一个batchsize输入图像数量\nZ：默认学习率\n\n新的学习率= （X/Y）x Z\n如：\nX：1GPU+2img/GPU=2张\nMMdet默认是8GPU*2img/GPU=16张\nMMdet默认学习率=0.02\n新的学习率=0.0025\n\n\n\n为了克服数据量多的问题，我们会选择将数据分成几个部分，即batch，进行训练，从而使得每个批次的数据量是可以负载的。将这些batch的数据逐一送入计算训练，更新神经网络的权值，使得网络收敛。\n\n一个epoch指代所有的数据送入网络中完成一次前向计算及反向传播的过程。由于一个epoch常常太大，计算机无法负荷，我们会将它分成几个较小的batches。\n\n所谓Batch就是每次送入网络中训练的一部分数据，而Batch Size就是每个batch中训练样本的数量\n\n所谓iterations就是完成一次epoch所需的batch个数。\n\n简单一句话说就是，我们有2000个数据，分成4个batch，那么batch size就是500。运行所有的数据进行训练，完成1个epoch，需要进行4次iterations。\n\n# TOOLS\n\n## Log Analysis\n\n`tools/analysis_tools/analyze_logs.py` plots loss/mAP curves given a training log file. Run `pip install seaborn` first to install the dependency.\n\n```\npython tools/analysis_tools/analyze_logs.py plot_curve [--keys ${KEYS}] [--title ${TITLE}] [--legend ${LEGEND}] [--backend ${BACKEND}] [--style ${STYLE}] [--out ${OUT_FILE}]\n```\n\n- ```\n  python tools/analysis_tools/analyze_logs.py plot_curve work_dirs/faster_rcnn_r50_fpn_1x_coco/20210809_105106.log.json --keys loss_cls --legend loss_cls\n  ```\n\n- ```\n  python tools/analysis_tools/analyze_logs.py plot_curve work_dirs/faster_rcnn_r50_fpn_1x_coco/20210809_105106.log.json --keys bbox_mAP --legend bbox_mAP\n  ```\n\n## Result Analysis\n\n`tools/analysis_tools/analyze_results.py` calculates single image mAP and saves or shows the topk images with the highest and lowest scores based on prediction results.\n\nUsage:\n\n```\npython tools/analysis_tools/analyze_results.py \\\n      ${CONFIG} \\\n      ${PREDICTION_PATH} \\\n      ${SHOW_DIR} \\\n      [--show] \\\n      [--wait-time ${WAIT_TIME}] \\\n      [--topk ${TOPK}] \\\n      [--show-score-thr ${SHOW_SCORE_THR}] \\\n      [--cfg-options ${CFG_OPTIONS}]\n```\n\nDescription of all arguments:\n\n- `config` : The path of a model config file.\n- `prediction_path`: Output result file in pickle format from `tools/test.py`\n- `show_dir`: Directory where painted GT and detection images will be saved\n- `--show`：Determines whether to show painted images, If not specified, it will be set to `False`\n- `--wait-time`: The interval of show (s), 0 is block\n- `--topk`: The number of saved images that have the highest and lowest `topk` scores after sorting. If not specified, it will be set to `20`.\n- `--show-score-thr`: Show score threshold. If not specified, it will be set to `0`.\n- `--cfg-options`: If specified, the key-value pair optional cfg will be merged into config file\n\nExamples:\n\nAssume that you have got result file in pickle format from `tools/test.py` in the path ‘./result.pkl’.\n\nTest Faster R-CNN and visualize the results, save images to the directory `results/`\n\n```\npython tools/analysis_tools/analyze_results.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py result.pkl results --show\n```\n\nTest Faster R-CNN and specified topk to 50, save images to the directory `results/`\n\n```\npython tools/analysis_tools/analyze_results.py \\\n       configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py \\\n       result.pkl \\\n       results \\\n       --topk 50\n```\n\nIf you want to filter the low score prediction results, you can specify the `show-score-thr` parameter\n\n```\npython tools/analysis_tools/analyze_results.py \\\n       configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py \\\n       result.pkl \\\n       results \\\n       --show-score-thr 0.3\n```\n\n```\npython tools/analysis_tools/eval_metric.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py result.pkl \n```\n\n","source":"_posts/mmdetection的一些小坑.md","raw":"---\ntitle: mmdetection的一些小坑\nreprint: false\ncover:\ndate: 2022-01-23 12:46:21\nupdated: 2022-01-23 12:46:21\ncategories: 环境搭建\ntags:\n  - mmdetection\n  - 目标检测\n---\n\n记录一下使用mmdetection中遇到的一些坑，方便查阅。\n\n<!--more-->\n\n# 安装\n\npip install mmcv-full==1.3.9 -f https://download.openmmlab.com/mmcv/dist/cu111/torch1.9.0/index.html\n\npip install mmcv-full==1.3.9 -f https://download.openmmlab.com/mmcv/dist/cu101/torch1.7.0/index.html\n\n修改完后，需要重新编译（python setup.py install)\n\npip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cu111/{torch_version}/index.html\n\npip install mmcv-full==1.3.3 -f https://download.openmmlab.com/mmcv/dist/cu111/torch1.8.0/index.html \n\npip install -r requirements/build.txt\npython setup.py develop\n\n\n\n# 修改数据集为coco格式\n\n目录格式：\n\n```\nmmdetection\n├── mmdet\n├── tools\n├── configs\n├── data\n│   ├── coco\n│   │   ├── annotations\n│   │   ├── train2017\n│   │   ├── val2017\n│   │   ├── test2017\n```\n\n修改相关文件：\n\n[(4条消息) mmdetection自定义数据集进行训练_xiangxianghehe的博客-CSDN博客_mmdetection 训练数据集](https://blog.csdn.net/xiangxianghehe/article/details/89812058#commentsedit)\n\n\n\n\n\n# 常用命令\n\n## 测试与训练\n\npython tools/test.py configs/faster_rcnn/faster_rcnn_r50_fpn\n_1x_coco.py checkpoints/epoch_2.pth --show\n\npython tools/train.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py\n\npython tools/test.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py checkpoints/{model}/latest.pth --out results/{model}/results.pkl --show-dir results/\n\n```\npython tools/test.py configs/fcos/fcos_r50_caffe_fpn_gn-head_1x_coco.py checkpoints/latest.pth --out results/fcos_r50_caffe_fpn_gn-head_1x_coco/results.pkl --show-dir results/\n```\n\n## train参数\n\nThis tool accepts several optional arguments, including:\n\n- `--no-validate` (**not suggested**): Disable evaluation during training.\n- `--work-dir ${WORK_DIR}`: Override the working directory.\n- `--resume-from ${CHECKPOINT_FILE}`: Resume from a previous checkpoint file.\n- `--options 'Key=value'`: Overrides other settings in the used config.\n\n## 查看config\n\npython tools/misc/print_config.py configs/zr/zr_fcos_r50_caffe_fpn_gn-head_1x_coco.py\n\n## 学习率配置\n\nX：我的一个batchsize输入图像数量\nY：mmdetction一个batchsize输入图像数量\nZ：默认学习率\n\n新的学习率= （X/Y）x Z\n如：\nX：1GPU+2img/GPU=2张\nMMdet默认是8GPU*2img/GPU=16张\nMMdet默认学习率=0.02\n新的学习率=0.0025\n\n\n\n为了克服数据量多的问题，我们会选择将数据分成几个部分，即batch，进行训练，从而使得每个批次的数据量是可以负载的。将这些batch的数据逐一送入计算训练，更新神经网络的权值，使得网络收敛。\n\n一个epoch指代所有的数据送入网络中完成一次前向计算及反向传播的过程。由于一个epoch常常太大，计算机无法负荷，我们会将它分成几个较小的batches。\n\n所谓Batch就是每次送入网络中训练的一部分数据，而Batch Size就是每个batch中训练样本的数量\n\n所谓iterations就是完成一次epoch所需的batch个数。\n\n简单一句话说就是，我们有2000个数据，分成4个batch，那么batch size就是500。运行所有的数据进行训练，完成1个epoch，需要进行4次iterations。\n\n# TOOLS\n\n## Log Analysis\n\n`tools/analysis_tools/analyze_logs.py` plots loss/mAP curves given a training log file. Run `pip install seaborn` first to install the dependency.\n\n```\npython tools/analysis_tools/analyze_logs.py plot_curve [--keys ${KEYS}] [--title ${TITLE}] [--legend ${LEGEND}] [--backend ${BACKEND}] [--style ${STYLE}] [--out ${OUT_FILE}]\n```\n\n- ```\n  python tools/analysis_tools/analyze_logs.py plot_curve work_dirs/faster_rcnn_r50_fpn_1x_coco/20210809_105106.log.json --keys loss_cls --legend loss_cls\n  ```\n\n- ```\n  python tools/analysis_tools/analyze_logs.py plot_curve work_dirs/faster_rcnn_r50_fpn_1x_coco/20210809_105106.log.json --keys bbox_mAP --legend bbox_mAP\n  ```\n\n## Result Analysis\n\n`tools/analysis_tools/analyze_results.py` calculates single image mAP and saves or shows the topk images with the highest and lowest scores based on prediction results.\n\nUsage:\n\n```\npython tools/analysis_tools/analyze_results.py \\\n      ${CONFIG} \\\n      ${PREDICTION_PATH} \\\n      ${SHOW_DIR} \\\n      [--show] \\\n      [--wait-time ${WAIT_TIME}] \\\n      [--topk ${TOPK}] \\\n      [--show-score-thr ${SHOW_SCORE_THR}] \\\n      [--cfg-options ${CFG_OPTIONS}]\n```\n\nDescription of all arguments:\n\n- `config` : The path of a model config file.\n- `prediction_path`: Output result file in pickle format from `tools/test.py`\n- `show_dir`: Directory where painted GT and detection images will be saved\n- `--show`：Determines whether to show painted images, If not specified, it will be set to `False`\n- `--wait-time`: The interval of show (s), 0 is block\n- `--topk`: The number of saved images that have the highest and lowest `topk` scores after sorting. If not specified, it will be set to `20`.\n- `--show-score-thr`: Show score threshold. If not specified, it will be set to `0`.\n- `--cfg-options`: If specified, the key-value pair optional cfg will be merged into config file\n\nExamples:\n\nAssume that you have got result file in pickle format from `tools/test.py` in the path ‘./result.pkl’.\n\nTest Faster R-CNN and visualize the results, save images to the directory `results/`\n\n```\npython tools/analysis_tools/analyze_results.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py result.pkl results --show\n```\n\nTest Faster R-CNN and specified topk to 50, save images to the directory `results/`\n\n```\npython tools/analysis_tools/analyze_results.py \\\n       configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py \\\n       result.pkl \\\n       results \\\n       --topk 50\n```\n\nIf you want to filter the low score prediction results, you can specify the `show-score-thr` parameter\n\n```\npython tools/analysis_tools/analyze_results.py \\\n       configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py \\\n       result.pkl \\\n       results \\\n       --show-score-thr 0.3\n```\n\n```\npython tools/analysis_tools/eval_metric.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py result.pkl \n```\n\n","slug":"mmdetection的一些小坑","published":1,"_id":"ckzi2bho60003aswzf95ebcdu","comments":1,"layout":"post","photos":[],"link":"","content":"<p>记录一下使用mmdetection中遇到的一些坑，方便查阅。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>pip install mmcv-full==1.3.9 -f <a href=\"https://download.openmmlab.com/mmcv/dist/cu111/torch1.9.0/index.html\">https://download.openmmlab.com/mmcv/dist/cu111/torch1.9.0/index.html</a></p>\n<p>pip install mmcv-full==1.3.9 -f <a href=\"https://download.openmmlab.com/mmcv/dist/cu101/torch1.7.0/index.html\">https://download.openmmlab.com/mmcv/dist/cu101/torch1.7.0/index.html</a></p>\n<p>修改完后，需要重新编译（python setup.py install)</p>\n<p>pip install mmcv-full -f <a href=\"https://download.openmmlab.com/mmcv/dist/cu111/%7Btorch_version%7D/index.html\">https://download.openmmlab.com/mmcv/dist/cu111/{torch_version}/index.html</a></p>\n<p>pip install mmcv-full==1.3.3 -f <a href=\"https://download.openmmlab.com/mmcv/dist/cu111/torch1.8.0/index.html\">https://download.openmmlab.com/mmcv/dist/cu111/torch1.8.0/index.html</a> </p>\n<p>pip install -r requirements/build.txt<br>python setup.py develop</p>\n<h1 id=\"修改数据集为coco格式\"><a href=\"#修改数据集为coco格式\" class=\"headerlink\" title=\"修改数据集为coco格式\"></a>修改数据集为coco格式</h1><p>目录格式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mmdetection</span><br><span class=\"line\">├── mmdet</span><br><span class=\"line\">├── tools</span><br><span class=\"line\">├── configs</span><br><span class=\"line\">├── data</span><br><span class=\"line\">│   ├── coco</span><br><span class=\"line\">│   │   ├── annotations</span><br><span class=\"line\">│   │   ├── train2017</span><br><span class=\"line\">│   │   ├── val2017</span><br><span class=\"line\">│   │   ├── test2017</span><br></pre></td></tr></table></figure>\n\n<p>修改相关文件：</p>\n<p><a href=\"https://blog.csdn.net/xiangxianghehe/article/details/89812058#commentsedit\">(4条消息) mmdetection自定义数据集进行训练_xiangxianghehe的博客-CSDN博客_mmdetection 训练数据集</a></p>\n<h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><h2 id=\"测试与训练\"><a href=\"#测试与训练\" class=\"headerlink\" title=\"测试与训练\"></a>测试与训练</h2><p>python tools/test.py configs/faster_rcnn/faster_rcnn_r50_fpn<br>_1x_coco.py checkpoints/epoch_2.pth –show</p>\n<p>python tools/train.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py</p>\n<p>python tools/test.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py checkpoints/{model}/latest.pth –out results/{model}/results.pkl –show-dir results/</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/test.py configs/fcos/fcos_r50_caffe_fpn_gn-head_1x_coco.py checkpoints/latest.pth --out results/fcos_r50_caffe_fpn_gn-head_1x_coco/results.pkl --show-dir results/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"train参数\"><a href=\"#train参数\" class=\"headerlink\" title=\"train参数\"></a>train参数</h2><p>This tool accepts several optional arguments, including:</p>\n<ul>\n<li><code>--no-validate</code> (<strong>not suggested</strong>): Disable evaluation during training.</li>\n<li><code>--work-dir $&#123;WORK_DIR&#125;</code>: Override the working directory.</li>\n<li><code>--resume-from $&#123;CHECKPOINT_FILE&#125;</code>: Resume from a previous checkpoint file.</li>\n<li><code>--options &#39;Key=value&#39;</code>: Overrides other settings in the used config.</li>\n</ul>\n<h2 id=\"查看config\"><a href=\"#查看config\" class=\"headerlink\" title=\"查看config\"></a>查看config</h2><p>python tools/misc/print_config.py configs/zr/zr_fcos_r50_caffe_fpn_gn-head_1x_coco.py</p>\n<h2 id=\"学习率配置\"><a href=\"#学习率配置\" class=\"headerlink\" title=\"学习率配置\"></a>学习率配置</h2><p>X：我的一个batchsize输入图像数量<br>Y：mmdetction一个batchsize输入图像数量<br>Z：默认学习率</p>\n<p>新的学习率= （X/Y）x Z<br>如：<br>X：1GPU+2img/GPU=2张<br>MMdet默认是8GPU*2img/GPU=16张<br>MMdet默认学习率=0.02<br>新的学习率=0.0025</p>\n<p>为了克服数据量多的问题，我们会选择将数据分成几个部分，即batch，进行训练，从而使得每个批次的数据量是可以负载的。将这些batch的数据逐一送入计算训练，更新神经网络的权值，使得网络收敛。</p>\n<p>一个epoch指代所有的数据送入网络中完成一次前向计算及反向传播的过程。由于一个epoch常常太大，计算机无法负荷，我们会将它分成几个较小的batches。</p>\n<p>所谓Batch就是每次送入网络中训练的一部分数据，而Batch Size就是每个batch中训练样本的数量</p>\n<p>所谓iterations就是完成一次epoch所需的batch个数。</p>\n<p>简单一句话说就是，我们有2000个数据，分成4个batch，那么batch size就是500。运行所有的数据进行训练，完成1个epoch，需要进行4次iterations。</p>\n<h1 id=\"TOOLS\"><a href=\"#TOOLS\" class=\"headerlink\" title=\"TOOLS\"></a>TOOLS</h1><h2 id=\"Log-Analysis\"><a href=\"#Log-Analysis\" class=\"headerlink\" title=\"Log Analysis\"></a>Log Analysis</h2><p><code>tools/analysis_tools/analyze_logs.py</code> plots loss/mAP curves given a training log file. Run <code>pip install seaborn</code> first to install the dependency.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/analysis_tools/analyze_logs.py plot_curve [--keys $&#123;KEYS&#125;] [--title $&#123;TITLE&#125;] [--legend $&#123;LEGEND&#125;] [--backend $&#123;BACKEND&#125;] [--style $&#123;STYLE&#125;] [--out $&#123;OUT_FILE&#125;]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>```<br>python tools/analysis_tools/analyze_logs.py plot_curve work_dirs/faster_rcnn_r50_fpn_1x_coco/20210809_105106.log.json –keys loss_cls –legend loss_cls<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- ```</span><br><span class=\"line\">  python tools/analysis_tools/analyze_logs.py plot_curve work_dirs/faster_rcnn_r50_fpn_1x_coco/20210809_105106.log.json --keys bbox_mAP --legend bbox_mAP</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"Result-Analysis\"><a href=\"#Result-Analysis\" class=\"headerlink\" title=\"Result Analysis\"></a>Result Analysis</h2><p><code>tools/analysis_tools/analyze_results.py</code> calculates single image mAP and saves or shows the topk images with the highest and lowest scores based on prediction results.</p>\n<p>Usage:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/analysis_tools/analyze_results.py \\</span><br><span class=\"line\">      $&#123;CONFIG&#125; \\</span><br><span class=\"line\">      $&#123;PREDICTION_PATH&#125; \\</span><br><span class=\"line\">      $&#123;SHOW_DIR&#125; \\</span><br><span class=\"line\">      [--show] \\</span><br><span class=\"line\">      [--wait-time $&#123;WAIT_TIME&#125;] \\</span><br><span class=\"line\">      [--topk $&#123;TOPK&#125;] \\</span><br><span class=\"line\">      [--show-score-thr $&#123;SHOW_SCORE_THR&#125;] \\</span><br><span class=\"line\">      [--cfg-options $&#123;CFG_OPTIONS&#125;]</span><br></pre></td></tr></table></figure>\n\n<p>Description of all arguments:</p>\n<ul>\n<li><code>config</code> : The path of a model config file.</li>\n<li><code>prediction_path</code>: Output result file in pickle format from <code>tools/test.py</code></li>\n<li><code>show_dir</code>: Directory where painted GT and detection images will be saved</li>\n<li><code>--show</code>：Determines whether to show painted images, If not specified, it will be set to <code>False</code></li>\n<li><code>--wait-time</code>: The interval of show (s), 0 is block</li>\n<li><code>--topk</code>: The number of saved images that have the highest and lowest <code>topk</code> scores after sorting. If not specified, it will be set to <code>20</code>.</li>\n<li><code>--show-score-thr</code>: Show score threshold. If not specified, it will be set to <code>0</code>.</li>\n<li><code>--cfg-options</code>: If specified, the key-value pair optional cfg will be merged into config file</li>\n</ul>\n<p>Examples:</p>\n<p>Assume that you have got result file in pickle format from <code>tools/test.py</code> in the path ‘./result.pkl’.</p>\n<p>Test Faster R-CNN and visualize the results, save images to the directory <code>results/</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/analysis_tools/analyze_results.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py result.pkl results --show</span><br></pre></td></tr></table></figure>\n\n<p>Test Faster R-CNN and specified topk to 50, save images to the directory <code>results/</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/analysis_tools/analyze_results.py \\</span><br><span class=\"line\">       configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py \\</span><br><span class=\"line\">       result.pkl \\</span><br><span class=\"line\">       results \\</span><br><span class=\"line\">       --topk 50</span><br></pre></td></tr></table></figure>\n\n<p>If you want to filter the low score prediction results, you can specify the <code>show-score-thr</code> parameter</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/analysis_tools/analyze_results.py \\</span><br><span class=\"line\">       configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py \\</span><br><span class=\"line\">       result.pkl \\</span><br><span class=\"line\">       results \\</span><br><span class=\"line\">       --show-score-thr 0.3</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/analysis_tools/eval_metric.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py result.pkl </span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>记录一下使用mmdetection中遇到的一些坑，方便查阅。</p>","more":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>pip install mmcv-full==1.3.9 -f <a href=\"https://download.openmmlab.com/mmcv/dist/cu111/torch1.9.0/index.html\">https://download.openmmlab.com/mmcv/dist/cu111/torch1.9.0/index.html</a></p>\n<p>pip install mmcv-full==1.3.9 -f <a href=\"https://download.openmmlab.com/mmcv/dist/cu101/torch1.7.0/index.html\">https://download.openmmlab.com/mmcv/dist/cu101/torch1.7.0/index.html</a></p>\n<p>修改完后，需要重新编译（python setup.py install)</p>\n<p>pip install mmcv-full -f <a href=\"https://download.openmmlab.com/mmcv/dist/cu111/%7Btorch_version%7D/index.html\">https://download.openmmlab.com/mmcv/dist/cu111/{torch_version}/index.html</a></p>\n<p>pip install mmcv-full==1.3.3 -f <a href=\"https://download.openmmlab.com/mmcv/dist/cu111/torch1.8.0/index.html\">https://download.openmmlab.com/mmcv/dist/cu111/torch1.8.0/index.html</a> </p>\n<p>pip install -r requirements/build.txt<br>python setup.py develop</p>\n<h1 id=\"修改数据集为coco格式\"><a href=\"#修改数据集为coco格式\" class=\"headerlink\" title=\"修改数据集为coco格式\"></a>修改数据集为coco格式</h1><p>目录格式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mmdetection</span><br><span class=\"line\">├── mmdet</span><br><span class=\"line\">├── tools</span><br><span class=\"line\">├── configs</span><br><span class=\"line\">├── data</span><br><span class=\"line\">│   ├── coco</span><br><span class=\"line\">│   │   ├── annotations</span><br><span class=\"line\">│   │   ├── train2017</span><br><span class=\"line\">│   │   ├── val2017</span><br><span class=\"line\">│   │   ├── test2017</span><br></pre></td></tr></table></figure>\n\n<p>修改相关文件：</p>\n<p><a href=\"https://blog.csdn.net/xiangxianghehe/article/details/89812058#commentsedit\">(4条消息) mmdetection自定义数据集进行训练_xiangxianghehe的博客-CSDN博客_mmdetection 训练数据集</a></p>\n<h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><h2 id=\"测试与训练\"><a href=\"#测试与训练\" class=\"headerlink\" title=\"测试与训练\"></a>测试与训练</h2><p>python tools/test.py configs/faster_rcnn/faster_rcnn_r50_fpn<br>_1x_coco.py checkpoints/epoch_2.pth –show</p>\n<p>python tools/train.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py</p>\n<p>python tools/test.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py checkpoints/{model}/latest.pth –out results/{model}/results.pkl –show-dir results/</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/test.py configs/fcos/fcos_r50_caffe_fpn_gn-head_1x_coco.py checkpoints/latest.pth --out results/fcos_r50_caffe_fpn_gn-head_1x_coco/results.pkl --show-dir results/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"train参数\"><a href=\"#train参数\" class=\"headerlink\" title=\"train参数\"></a>train参数</h2><p>This tool accepts several optional arguments, including:</p>\n<ul>\n<li><code>--no-validate</code> (<strong>not suggested</strong>): Disable evaluation during training.</li>\n<li><code>--work-dir $&#123;WORK_DIR&#125;</code>: Override the working directory.</li>\n<li><code>--resume-from $&#123;CHECKPOINT_FILE&#125;</code>: Resume from a previous checkpoint file.</li>\n<li><code>--options &#39;Key=value&#39;</code>: Overrides other settings in the used config.</li>\n</ul>\n<h2 id=\"查看config\"><a href=\"#查看config\" class=\"headerlink\" title=\"查看config\"></a>查看config</h2><p>python tools/misc/print_config.py configs/zr/zr_fcos_r50_caffe_fpn_gn-head_1x_coco.py</p>\n<h2 id=\"学习率配置\"><a href=\"#学习率配置\" class=\"headerlink\" title=\"学习率配置\"></a>学习率配置</h2><p>X：我的一个batchsize输入图像数量<br>Y：mmdetction一个batchsize输入图像数量<br>Z：默认学习率</p>\n<p>新的学习率= （X/Y）x Z<br>如：<br>X：1GPU+2img/GPU=2张<br>MMdet默认是8GPU*2img/GPU=16张<br>MMdet默认学习率=0.02<br>新的学习率=0.0025</p>\n<p>为了克服数据量多的问题，我们会选择将数据分成几个部分，即batch，进行训练，从而使得每个批次的数据量是可以负载的。将这些batch的数据逐一送入计算训练，更新神经网络的权值，使得网络收敛。</p>\n<p>一个epoch指代所有的数据送入网络中完成一次前向计算及反向传播的过程。由于一个epoch常常太大，计算机无法负荷，我们会将它分成几个较小的batches。</p>\n<p>所谓Batch就是每次送入网络中训练的一部分数据，而Batch Size就是每个batch中训练样本的数量</p>\n<p>所谓iterations就是完成一次epoch所需的batch个数。</p>\n<p>简单一句话说就是，我们有2000个数据，分成4个batch，那么batch size就是500。运行所有的数据进行训练，完成1个epoch，需要进行4次iterations。</p>\n<h1 id=\"TOOLS\"><a href=\"#TOOLS\" class=\"headerlink\" title=\"TOOLS\"></a>TOOLS</h1><h2 id=\"Log-Analysis\"><a href=\"#Log-Analysis\" class=\"headerlink\" title=\"Log Analysis\"></a>Log Analysis</h2><p><code>tools/analysis_tools/analyze_logs.py</code> plots loss/mAP curves given a training log file. Run <code>pip install seaborn</code> first to install the dependency.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/analysis_tools/analyze_logs.py plot_curve [--keys $&#123;KEYS&#125;] [--title $&#123;TITLE&#125;] [--legend $&#123;LEGEND&#125;] [--backend $&#123;BACKEND&#125;] [--style $&#123;STYLE&#125;] [--out $&#123;OUT_FILE&#125;]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>```<br>python tools/analysis_tools/analyze_logs.py plot_curve work_dirs/faster_rcnn_r50_fpn_1x_coco/20210809_105106.log.json –keys loss_cls –legend loss_cls<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- ```</span><br><span class=\"line\">  python tools/analysis_tools/analyze_logs.py plot_curve work_dirs/faster_rcnn_r50_fpn_1x_coco/20210809_105106.log.json --keys bbox_mAP --legend bbox_mAP</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"Result-Analysis\"><a href=\"#Result-Analysis\" class=\"headerlink\" title=\"Result Analysis\"></a>Result Analysis</h2><p><code>tools/analysis_tools/analyze_results.py</code> calculates single image mAP and saves or shows the topk images with the highest and lowest scores based on prediction results.</p>\n<p>Usage:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/analysis_tools/analyze_results.py \\</span><br><span class=\"line\">      $&#123;CONFIG&#125; \\</span><br><span class=\"line\">      $&#123;PREDICTION_PATH&#125; \\</span><br><span class=\"line\">      $&#123;SHOW_DIR&#125; \\</span><br><span class=\"line\">      [--show] \\</span><br><span class=\"line\">      [--wait-time $&#123;WAIT_TIME&#125;] \\</span><br><span class=\"line\">      [--topk $&#123;TOPK&#125;] \\</span><br><span class=\"line\">      [--show-score-thr $&#123;SHOW_SCORE_THR&#125;] \\</span><br><span class=\"line\">      [--cfg-options $&#123;CFG_OPTIONS&#125;]</span><br></pre></td></tr></table></figure>\n\n<p>Description of all arguments:</p>\n<ul>\n<li><code>config</code> : The path of a model config file.</li>\n<li><code>prediction_path</code>: Output result file in pickle format from <code>tools/test.py</code></li>\n<li><code>show_dir</code>: Directory where painted GT and detection images will be saved</li>\n<li><code>--show</code>：Determines whether to show painted images, If not specified, it will be set to <code>False</code></li>\n<li><code>--wait-time</code>: The interval of show (s), 0 is block</li>\n<li><code>--topk</code>: The number of saved images that have the highest and lowest <code>topk</code> scores after sorting. If not specified, it will be set to <code>20</code>.</li>\n<li><code>--show-score-thr</code>: Show score threshold. If not specified, it will be set to <code>0</code>.</li>\n<li><code>--cfg-options</code>: If specified, the key-value pair optional cfg will be merged into config file</li>\n</ul>\n<p>Examples:</p>\n<p>Assume that you have got result file in pickle format from <code>tools/test.py</code> in the path ‘./result.pkl’.</p>\n<p>Test Faster R-CNN and visualize the results, save images to the directory <code>results/</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/analysis_tools/analyze_results.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py result.pkl results --show</span><br></pre></td></tr></table></figure>\n\n<p>Test Faster R-CNN and specified topk to 50, save images to the directory <code>results/</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/analysis_tools/analyze_results.py \\</span><br><span class=\"line\">       configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py \\</span><br><span class=\"line\">       result.pkl \\</span><br><span class=\"line\">       results \\</span><br><span class=\"line\">       --topk 50</span><br></pre></td></tr></table></figure>\n\n<p>If you want to filter the low score prediction results, you can specify the <code>show-score-thr</code> parameter</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/analysis_tools/analyze_results.py \\</span><br><span class=\"line\">       configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py \\</span><br><span class=\"line\">       result.pkl \\</span><br><span class=\"line\">       results \\</span><br><span class=\"line\">       --show-score-thr 0.3</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/analysis_tools/eval_metric.py configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py result.pkl </span><br></pre></td></tr></table></figure>"},{"title":"博客施工记录","reprint":false,"cover":null,"data":"2022-01-18T09:37:53.000Z","updated":"2022-01-23T04:58:20.000Z","_content":"\n记录一下hexo的施工过程。主要参考K大的这篇[基于 Hexo 的全自动博客构建部署系统 ](https://kchen.cc/2016/11/12/hexo-instructions/#什么是-Hexo)，我再稍微补充一些自己遇到的坑。\n\n<!--more-->\n\n# 施工进度\n\n- [x] smms上传限制5M图片，如果图片大于5M需要对图片进行压缩\n- [ ] action缓存，构建加速\n- [ ] ~~dns负载均衡~~（暂时没有第二个服务器）\n- [x] 评论模块\n- [x] 归档页\n\n# 新建文章\n\n在hexo根目录下，终端输入`hexo new [layout] [title]`\n\n| Layout         | Path           |\n| -------------- | -------------- |\n| post (default) | source/_posts  |\n| draft          | source/_drafts |\n| page           | source         |\n\n草稿发布`hexo publish [title]`\n\n# md图床问题\n\nMarkdown使用图床很方便，我现在用的图床是SMMS，暂时没多大问题，但前期做好备份还是有备无患。因此，最好的解决方案是先将图片保存到本地目录，写完push至github后，结合Action自动读取md源文件，并将图片链接转换为图床链接，再完成hexo渲染。\n\npython转换代码如下\n\n```python\nimport argparse\nimport os\nimport argparse\nimport re\nimport requests\nimport json\n\n\ndef smms_upload(img):\n    # 判断图片是否大于5M\n    with open(img, 'rb') as img_file:\n        if os.path.getsize(img) < 5 * 1024 * 1024:\n            try:\n                smms_url = 'https://sm.ms/api/v2/upload'\n                response = requests.post(\n                    smms_url,\n                    files={'smfile': img_file, 'format': 'json'},\n                    headers={'Authorization': smms_token}\n                )\n                print(\"upload finish\")\n                img_new_url = json.loads(response.text)\n                cloud_path = img_new_url['data']['url']\n\n                return cloud_path\n            except BaseException as err:\n                print(f\"error in upload to smms:{err}\")\n        else:\n            print('err in upload, image size is more than 5M')\n            return None\n\n\ndef convert2url(file_path):\n    with open(file_path, 'r', encoding='utf-8') as f:\n        lines = f.readlines()\n\n    outs = []\n    for line in lines:\n        if re.search('\\!\\[.*\\)', line) is not None:\n            images_offline = re.findall('\\!\\[.*\\)', line)  # 找到每段中所有的图片本地链接\n            for item in images_offline:\n                # 对每个链接进行替换\n                img_path = re.search('(?<=\\()(.+?)(?=\\))', item).group()\n                # 判断图片路径是否为网络路径\n                if re.search('[a-zA-z]+://[^\\s]*', img_path) is None:\n                    img_file = os.path.join(path_md, img_path)\n                    images_online = smms_upload(img_file)\n                    if images_online is not None:\n                        line = line.replace(img_path, images_online)\n                        outs.append(line)\n        else:\n            outs.append(line)\n\n    with open(file_path, 'w', encoding='utf-8') as f:\n        f.writelines(outs)\n\nif __name__ == \"__main__\":\n    ap = argparse.ArgumentParser()\n    ap.add_argument(\"-p\", \"--path\", help=\"the path of your post file\")\n    ap.add_argument(\"-t\", \"--token\", help=\"the token of your smms count\")\n\n    args = ap.parse_args()\n    path_md = args.path\n    smms_token = args.token\n\n    md_list = os.listdir(path_md)\n    md_list = [item for item in md_list if item.endswith('md')]\n    for item in md_list:\n        file_path = os.path.join(path_md, item)\n        convert2url(file_path)\n\n```\n\n\n\n# Github Action自动部署\n\n每次部署在本地hexo g -d，只是在本地构建文件再提交，github只充当了一个静态服务器的作用，没有起到git的作用，因此使用Github Action可以实现自动化部署，且可以实现图床链接的替换。\n\n在`.github`目录下新建文件夹`.workflows`，再新建文件`deployment.yml`，代码如下：\n\n```yaml\nname: Hexo Auto-Deploy\non: [push]\n\njobs:\n  repalce_image:\n    name: md images replace\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: 1. git checkout\n        uses: actions/checkout@v2.4.0\n\n      - name: 2. setup python\n        uses: actions/setup-python@v2.3.1\n        with:\n          python-version: \"3.8.x\"\n          architecture: \"x64\"\n\n      - name: 3. setup and run\n        run: |\n          pip install requests\n          sudo apt install tree\n          tree source/\n          python convert_img2url.py -p source/_posts -t \"${{ secrets.SMMS_TOKEN }}\"\n\n      - name: 4. install hexo...\n        run: |\n          npm install hexo-cli -g\n          npm install\n          npm list --depth 0\n\n      - name: 5. hexo generate\n        run: |\n          hexo clean\n          hexo g\n\n      - name: 6. hexo deploy ...\n        run: |\n          mkdir -p ~/.ssh/\n          echo \"${{ secrets.ACCESS_TOKEN }}\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          git config --global user.name \"zrtty1998\"\n          git config --global user.email \"zrtty1998@gmail.com\"\n          git config --global core.quotepath false\n\n          hexo d\n\n\n```\n\n# 负载均衡\n\n## HTTP重定向\n\nHTTP重定向通过一台服务器根据用户的HTTP请求计算出真实服务器地址，将该地址返回到重定向响应中返回给用户。这种负载均衡方案较简单，缺点如下：\n\n- 浏览器需两次请求才能完成一次访问\n- 重定向服务器本身可能会成为瓶颈\n- HTTP返回码302重定向，可能使搜索引擎判断SEO作弊\n\n![image-20220122110959737](博客施工记录/image-20220122110959737.png)\n\n## DNS负载均衡\n\nDNS负载均衡是使用DNS服务器对同一域名配置多条A记录，每次域名解析请求都会根据对应的负载均衡算法计算出一个不同的IP地址并返回。其结构类似HTTP负载均衡，只不过将请求步骤交给了DNS服务器。\n\n该方法有如下优点：\n\n- 负载均衡任务交给DNS服务器，较为方便。\n- 部署在服务器上的应用不需要任何配置。\n- 服务器可以位于互联网任何位置。\n- DNS支持基于地理位置的域名解析，即将根据用户所在地理位置，将域名解析成距离最近的一个服务器地址，加速用户访问。\n\n同时该方案也存在如下缺点：\n\n- DNS是多级解析的，每一级都会缓存该条域名的A记录，更新记录生效需要较长时间。\n- 不能按照服务器的处理能力来分配负载，DNS负载均衡采用的是简单的轮询算法，因此其负载均衡的效果不太好。\n- 为保证DNS数据即时更新，使地址能随机分配，一般需要将DNS刷新时间设置较小，但会导致DNS流量大增造成其他问题。\n\n# 博客美化\n\n## 代码块美化\n\n自带的代码块显示没有高亮，也没有一键复制的功能。因此着手添加这两项功能。\n\n首先注意到hexo已经内部集成了highlight.js和prismjs。\n\n","source":"_posts/博客施工记录.md","raw":"---\ntitle: 博客施工记录\nreprint: false\ncover:\ndata: 2022-01-18 17:37:53\nupdated: 2022-01-23 12:58:20\ncategories: 环境搭建\ntags:\n  - hexo\n  - Github Actions\n  - blog\n---\n\n记录一下hexo的施工过程。主要参考K大的这篇[基于 Hexo 的全自动博客构建部署系统 ](https://kchen.cc/2016/11/12/hexo-instructions/#什么是-Hexo)，我再稍微补充一些自己遇到的坑。\n\n<!--more-->\n\n# 施工进度\n\n- [x] smms上传限制5M图片，如果图片大于5M需要对图片进行压缩\n- [ ] action缓存，构建加速\n- [ ] ~~dns负载均衡~~（暂时没有第二个服务器）\n- [x] 评论模块\n- [x] 归档页\n\n# 新建文章\n\n在hexo根目录下，终端输入`hexo new [layout] [title]`\n\n| Layout         | Path           |\n| -------------- | -------------- |\n| post (default) | source/_posts  |\n| draft          | source/_drafts |\n| page           | source         |\n\n草稿发布`hexo publish [title]`\n\n# md图床问题\n\nMarkdown使用图床很方便，我现在用的图床是SMMS，暂时没多大问题，但前期做好备份还是有备无患。因此，最好的解决方案是先将图片保存到本地目录，写完push至github后，结合Action自动读取md源文件，并将图片链接转换为图床链接，再完成hexo渲染。\n\npython转换代码如下\n\n```python\nimport argparse\nimport os\nimport argparse\nimport re\nimport requests\nimport json\n\n\ndef smms_upload(img):\n    # 判断图片是否大于5M\n    with open(img, 'rb') as img_file:\n        if os.path.getsize(img) < 5 * 1024 * 1024:\n            try:\n                smms_url = 'https://sm.ms/api/v2/upload'\n                response = requests.post(\n                    smms_url,\n                    files={'smfile': img_file, 'format': 'json'},\n                    headers={'Authorization': smms_token}\n                )\n                print(\"upload finish\")\n                img_new_url = json.loads(response.text)\n                cloud_path = img_new_url['data']['url']\n\n                return cloud_path\n            except BaseException as err:\n                print(f\"error in upload to smms:{err}\")\n        else:\n            print('err in upload, image size is more than 5M')\n            return None\n\n\ndef convert2url(file_path):\n    with open(file_path, 'r', encoding='utf-8') as f:\n        lines = f.readlines()\n\n    outs = []\n    for line in lines:\n        if re.search('\\!\\[.*\\)', line) is not None:\n            images_offline = re.findall('\\!\\[.*\\)', line)  # 找到每段中所有的图片本地链接\n            for item in images_offline:\n                # 对每个链接进行替换\n                img_path = re.search('(?<=\\()(.+?)(?=\\))', item).group()\n                # 判断图片路径是否为网络路径\n                if re.search('[a-zA-z]+://[^\\s]*', img_path) is None:\n                    img_file = os.path.join(path_md, img_path)\n                    images_online = smms_upload(img_file)\n                    if images_online is not None:\n                        line = line.replace(img_path, images_online)\n                        outs.append(line)\n        else:\n            outs.append(line)\n\n    with open(file_path, 'w', encoding='utf-8') as f:\n        f.writelines(outs)\n\nif __name__ == \"__main__\":\n    ap = argparse.ArgumentParser()\n    ap.add_argument(\"-p\", \"--path\", help=\"the path of your post file\")\n    ap.add_argument(\"-t\", \"--token\", help=\"the token of your smms count\")\n\n    args = ap.parse_args()\n    path_md = args.path\n    smms_token = args.token\n\n    md_list = os.listdir(path_md)\n    md_list = [item for item in md_list if item.endswith('md')]\n    for item in md_list:\n        file_path = os.path.join(path_md, item)\n        convert2url(file_path)\n\n```\n\n\n\n# Github Action自动部署\n\n每次部署在本地hexo g -d，只是在本地构建文件再提交，github只充当了一个静态服务器的作用，没有起到git的作用，因此使用Github Action可以实现自动化部署，且可以实现图床链接的替换。\n\n在`.github`目录下新建文件夹`.workflows`，再新建文件`deployment.yml`，代码如下：\n\n```yaml\nname: Hexo Auto-Deploy\non: [push]\n\njobs:\n  repalce_image:\n    name: md images replace\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: 1. git checkout\n        uses: actions/checkout@v2.4.0\n\n      - name: 2. setup python\n        uses: actions/setup-python@v2.3.1\n        with:\n          python-version: \"3.8.x\"\n          architecture: \"x64\"\n\n      - name: 3. setup and run\n        run: |\n          pip install requests\n          sudo apt install tree\n          tree source/\n          python convert_img2url.py -p source/_posts -t \"${{ secrets.SMMS_TOKEN }}\"\n\n      - name: 4. install hexo...\n        run: |\n          npm install hexo-cli -g\n          npm install\n          npm list --depth 0\n\n      - name: 5. hexo generate\n        run: |\n          hexo clean\n          hexo g\n\n      - name: 6. hexo deploy ...\n        run: |\n          mkdir -p ~/.ssh/\n          echo \"${{ secrets.ACCESS_TOKEN }}\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          git config --global user.name \"zrtty1998\"\n          git config --global user.email \"zrtty1998@gmail.com\"\n          git config --global core.quotepath false\n\n          hexo d\n\n\n```\n\n# 负载均衡\n\n## HTTP重定向\n\nHTTP重定向通过一台服务器根据用户的HTTP请求计算出真实服务器地址，将该地址返回到重定向响应中返回给用户。这种负载均衡方案较简单，缺点如下：\n\n- 浏览器需两次请求才能完成一次访问\n- 重定向服务器本身可能会成为瓶颈\n- HTTP返回码302重定向，可能使搜索引擎判断SEO作弊\n\n![image-20220122110959737](博客施工记录/image-20220122110959737.png)\n\n## DNS负载均衡\n\nDNS负载均衡是使用DNS服务器对同一域名配置多条A记录，每次域名解析请求都会根据对应的负载均衡算法计算出一个不同的IP地址并返回。其结构类似HTTP负载均衡，只不过将请求步骤交给了DNS服务器。\n\n该方法有如下优点：\n\n- 负载均衡任务交给DNS服务器，较为方便。\n- 部署在服务器上的应用不需要任何配置。\n- 服务器可以位于互联网任何位置。\n- DNS支持基于地理位置的域名解析，即将根据用户所在地理位置，将域名解析成距离最近的一个服务器地址，加速用户访问。\n\n同时该方案也存在如下缺点：\n\n- DNS是多级解析的，每一级都会缓存该条域名的A记录，更新记录生效需要较长时间。\n- 不能按照服务器的处理能力来分配负载，DNS负载均衡采用的是简单的轮询算法，因此其负载均衡的效果不太好。\n- 为保证DNS数据即时更新，使地址能随机分配，一般需要将DNS刷新时间设置较小，但会导致DNS流量大增造成其他问题。\n\n# 博客美化\n\n## 代码块美化\n\n自带的代码块显示没有高亮，也没有一键复制的功能。因此着手添加这两项功能。\n\n首先注意到hexo已经内部集成了highlight.js和prismjs。\n\n","slug":"博客施工记录","published":1,"date":"2022-01-18T13:53:13.215Z","_id":"ckzi2bhob000easwzgrok6lrf","comments":1,"layout":"post","photos":[],"link":"","content":"<p>记录一下hexo的施工过程。主要参考K大的这篇<a href=\"https://kchen.cc/2016/11/12/hexo-instructions/#%E4%BB%80%E4%B9%88%E6%98%AF-Hexo\">基于 Hexo 的全自动博客构建部署系统 </a>，我再稍微补充一些自己遇到的坑。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"施工进度\"><a href=\"#施工进度\" class=\"headerlink\" title=\"施工进度\"></a>施工进度</h1><ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> smms上传限制5M图片，如果图片大于5M需要对图片进行压缩</li>\n<li><input disabled=\"\" type=\"checkbox\"> action缓存，构建加速</li>\n<li><input disabled=\"\" type=\"checkbox\"> <del>dns负载均衡</del>（暂时没有第二个服务器）</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 评论模块</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 归档页</li>\n</ul>\n<h1 id=\"新建文章\"><a href=\"#新建文章\" class=\"headerlink\" title=\"新建文章\"></a>新建文章</h1><p>在hexo根目录下，终端输入<code>hexo new [layout] [title]</code></p>\n<table>\n<thead>\n<tr>\n<th>Layout</th>\n<th>Path</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>post (default)</td>\n<td>source/_posts</td>\n</tr>\n<tr>\n<td>draft</td>\n<td>source/_drafts</td>\n</tr>\n<tr>\n<td>page</td>\n<td>source</td>\n</tr>\n</tbody></table>\n<p>草稿发布<code>hexo publish [title]</code></p>\n<h1 id=\"md图床问题\"><a href=\"#md图床问题\" class=\"headerlink\" title=\"md图床问题\"></a>md图床问题</h1><p>Markdown使用图床很方便，我现在用的图床是SMMS，暂时没多大问题，但前期做好备份还是有备无患。因此，最好的解决方案是先将图片保存到本地目录，写完push至github后，结合Action自动读取md源文件，并将图片链接转换为图床链接，再完成hexo渲染。</p>\n<p>python转换代码如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> argparse</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> argparse</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">smms_upload</span>(<span class=\"params\">img</span>):</span></span><br><span class=\"line\">    <span class=\"comment\"># 判断图片是否大于5M</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(img, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> img_file:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.getsize(img) &lt; <span class=\"number\">5</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>:</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                smms_url = <span class=\"string\">&#x27;https://sm.ms/api/v2/upload&#x27;</span></span><br><span class=\"line\">                response = requests.post(</span><br><span class=\"line\">                    smms_url,</span><br><span class=\"line\">                    files=&#123;<span class=\"string\">&#x27;smfile&#x27;</span>: img_file, <span class=\"string\">&#x27;format&#x27;</span>: <span class=\"string\">&#x27;json&#x27;</span>&#125;,</span><br><span class=\"line\">                    headers=&#123;<span class=\"string\">&#x27;Authorization&#x27;</span>: smms_token&#125;</span><br><span class=\"line\">                )</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;upload finish&quot;</span>)</span><br><span class=\"line\">                img_new_url = json.loads(response.text)</span><br><span class=\"line\">                cloud_path = img_new_url[<span class=\"string\">&#x27;data&#x27;</span>][<span class=\"string\">&#x27;url&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">return</span> cloud_path</span><br><span class=\"line\">            <span class=\"keyword\">except</span> BaseException <span class=\"keyword\">as</span> err:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;error in upload to smms:<span class=\"subst\">&#123;err&#125;</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;err in upload, image size is more than 5M&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">convert2url</span>(<span class=\"params\">file_path</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_path, <span class=\"string\">&#x27;r&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        lines = f.readlines()</span><br><span class=\"line\"></span><br><span class=\"line\">    outs = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> lines:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> re.search(<span class=\"string\">&#x27;\\!\\[.*\\)&#x27;</span>, line) <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            images_offline = re.findall(<span class=\"string\">&#x27;\\!\\[.*\\)&#x27;</span>, line)  <span class=\"comment\"># 找到每段中所有的图片本地链接</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> images_offline:</span><br><span class=\"line\">                <span class=\"comment\"># 对每个链接进行替换</span></span><br><span class=\"line\">                img_path = re.search(<span class=\"string\">&#x27;(?&lt;=\\()(.+?)(?=\\))&#x27;</span>, item).group()</span><br><span class=\"line\">                <span class=\"comment\"># 判断图片路径是否为网络路径</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> re.search(<span class=\"string\">&#x27;[a-zA-z]+://[^\\s]*&#x27;</span>, img_path) <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">                    img_file = os.path.join(path_md, img_path)</span><br><span class=\"line\">                    images_online = smms_upload(img_file)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> images_online <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">                        line = line.replace(img_path, images_online)</span><br><span class=\"line\">                        outs.append(line)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            outs.append(line)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_path, <span class=\"string\">&#x27;w&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.writelines(outs)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    ap = argparse.ArgumentParser()</span><br><span class=\"line\">    ap.add_argument(<span class=\"string\">&quot;-p&quot;</span>, <span class=\"string\">&quot;--path&quot;</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&quot;the path of your post file&quot;</span>)</span><br><span class=\"line\">    ap.add_argument(<span class=\"string\">&quot;-t&quot;</span>, <span class=\"string\">&quot;--token&quot;</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&quot;the token of your smms count&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    args = ap.parse_args()</span><br><span class=\"line\">    path_md = args.path</span><br><span class=\"line\">    smms_token = args.token</span><br><span class=\"line\"></span><br><span class=\"line\">    md_list = os.listdir(path_md)</span><br><span class=\"line\">    md_list = [item <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> md_list <span class=\"keyword\">if</span> item.endswith(<span class=\"string\">&#x27;md&#x27;</span>)]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> md_list:</span><br><span class=\"line\">        file_path = os.path.join(path_md, item)</span><br><span class=\"line\">        convert2url(file_path)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Github-Action自动部署\"><a href=\"#Github-Action自动部署\" class=\"headerlink\" title=\"Github Action自动部署\"></a>Github Action自动部署</h1><p>每次部署在本地hexo g -d，只是在本地构建文件再提交，github只充当了一个静态服务器的作用，没有起到git的作用，因此使用Github Action可以实现自动化部署，且可以实现图床链接的替换。</p>\n<p>在<code>.github</code>目录下新建文件夹<code>.workflows</code>，再新建文件<code>deployment.yml</code>，代码如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Hexo</span> <span class=\"string\">Auto-Deploy</span></span><br><span class=\"line\"><span class=\"attr\">on:</span> [<span class=\"string\">push</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">repalce_image:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">md</span> <span class=\"string\">images</span> <span class=\"string\">replace</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"number\">1</span><span class=\"string\">.</span> <span class=\"string\">git</span> <span class=\"string\">checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2.4.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"number\">2</span><span class=\"string\">.</span> <span class=\"string\">setup</span> <span class=\"string\">python</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2.3.1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"string\">&quot;3.8.x&quot;</span></span><br><span class=\"line\">          <span class=\"attr\">architecture:</span> <span class=\"string\">&quot;x64&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"number\">3</span><span class=\"string\">.</span> <span class=\"string\">setup</span> <span class=\"string\">and</span> <span class=\"string\">run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          pip install requests</span></span><br><span class=\"line\"><span class=\"string\">          sudo apt install tree</span></span><br><span class=\"line\"><span class=\"string\">          tree source/</span></span><br><span class=\"line\"><span class=\"string\">          python convert_img2url.py -p source/_posts -t &quot;$&#123;&#123; secrets.SMMS_TOKEN &#125;&#125;&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"number\">4</span><span class=\"string\">.</span> <span class=\"string\">install</span> <span class=\"string\">hexo...</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          npm install hexo-cli -g</span></span><br><span class=\"line\"><span class=\"string\">          npm install</span></span><br><span class=\"line\"><span class=\"string\">          npm list --depth 0</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"number\">5</span><span class=\"string\">.</span> <span class=\"string\">hexo</span> <span class=\"string\">generate</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          hexo clean</span></span><br><span class=\"line\"><span class=\"string\">          hexo g</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"number\">6</span><span class=\"string\">.</span> <span class=\"string\">hexo</span> <span class=\"string\">deploy</span> <span class=\"string\">...</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          mkdir -p ~/.ssh/</span></span><br><span class=\"line\"><span class=\"string\">          echo &quot;$&#123;&#123; secrets.ACCESS_TOKEN &#125;&#125;&quot; &gt; ~/.ssh/id_rsa</span></span><br><span class=\"line\"><span class=\"string\">          chmod 600 ~/.ssh/id_rsa</span></span><br><span class=\"line\"><span class=\"string\">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">&quot;zrtty1998&quot;</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">&quot;zrtty1998@gmail.com&quot;</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">core.quotepath</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"string\">hexo</span> <span class=\"string\">d</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"负载均衡\"><a href=\"#负载均衡\" class=\"headerlink\" title=\"负载均衡\"></a>负载均衡</h1><h2 id=\"HTTP重定向\"><a href=\"#HTTP重定向\" class=\"headerlink\" title=\"HTTP重定向\"></a>HTTP重定向</h2><p>HTTP重定向通过一台服务器根据用户的HTTP请求计算出真实服务器地址，将该地址返回到重定向响应中返回给用户。这种负载均衡方案较简单，缺点如下：</p>\n<ul>\n<li>浏览器需两次请求才能完成一次访问</li>\n<li>重定向服务器本身可能会成为瓶颈</li>\n<li>HTTP返回码302重定向，可能使搜索引擎判断SEO作弊</li>\n</ul>\n<p><img data-fancybox=\"gallery\" data-sizes=\"auto\" data-src=\"%E5%8D%9A%E5%AE%A2%E6%96%BD%E5%B7%A5%E8%AE%B0%E5%BD%95/image-20220122110959737.png\" alt=\"image-20220122110959737\" class=\"lazyload\"></p>\n<h2 id=\"DNS负载均衡\"><a href=\"#DNS负载均衡\" class=\"headerlink\" title=\"DNS负载均衡\"></a>DNS负载均衡</h2><p>DNS负载均衡是使用DNS服务器对同一域名配置多条A记录，每次域名解析请求都会根据对应的负载均衡算法计算出一个不同的IP地址并返回。其结构类似HTTP负载均衡，只不过将请求步骤交给了DNS服务器。</p>\n<p>该方法有如下优点：</p>\n<ul>\n<li>负载均衡任务交给DNS服务器，较为方便。</li>\n<li>部署在服务器上的应用不需要任何配置。</li>\n<li>服务器可以位于互联网任何位置。</li>\n<li>DNS支持基于地理位置的域名解析，即将根据用户所在地理位置，将域名解析成距离最近的一个服务器地址，加速用户访问。</li>\n</ul>\n<p>同时该方案也存在如下缺点：</p>\n<ul>\n<li>DNS是多级解析的，每一级都会缓存该条域名的A记录，更新记录生效需要较长时间。</li>\n<li>不能按照服务器的处理能力来分配负载，DNS负载均衡采用的是简单的轮询算法，因此其负载均衡的效果不太好。</li>\n<li>为保证DNS数据即时更新，使地址能随机分配，一般需要将DNS刷新时间设置较小，但会导致DNS流量大增造成其他问题。</li>\n</ul>\n<h1 id=\"博客美化\"><a href=\"#博客美化\" class=\"headerlink\" title=\"博客美化\"></a>博客美化</h1><h2 id=\"代码块美化\"><a href=\"#代码块美化\" class=\"headerlink\" title=\"代码块美化\"></a>代码块美化</h2><p>自带的代码块显示没有高亮，也没有一键复制的功能。因此着手添加这两项功能。</p>\n<p>首先注意到hexo已经内部集成了highlight.js和prismjs。</p>\n","site":{"data":{}},"excerpt":"<p>记录一下hexo的施工过程。主要参考K大的这篇<a href=\"https://kchen.cc/2016/11/12/hexo-instructions/#%E4%BB%80%E4%B9%88%E6%98%AF-Hexo\">基于 Hexo 的全自动博客构建部署系统 </a>，我再稍微补充一些自己遇到的坑。</p>","more":"<h1 id=\"施工进度\"><a href=\"#施工进度\" class=\"headerlink\" title=\"施工进度\"></a>施工进度</h1><ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> smms上传限制5M图片，如果图片大于5M需要对图片进行压缩</li>\n<li><input disabled=\"\" type=\"checkbox\"> action缓存，构建加速</li>\n<li><input disabled=\"\" type=\"checkbox\"> <del>dns负载均衡</del>（暂时没有第二个服务器）</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 评论模块</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 归档页</li>\n</ul>\n<h1 id=\"新建文章\"><a href=\"#新建文章\" class=\"headerlink\" title=\"新建文章\"></a>新建文章</h1><p>在hexo根目录下，终端输入<code>hexo new [layout] [title]</code></p>\n<table>\n<thead>\n<tr>\n<th>Layout</th>\n<th>Path</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>post (default)</td>\n<td>source/_posts</td>\n</tr>\n<tr>\n<td>draft</td>\n<td>source/_drafts</td>\n</tr>\n<tr>\n<td>page</td>\n<td>source</td>\n</tr>\n</tbody></table>\n<p>草稿发布<code>hexo publish [title]</code></p>\n<h1 id=\"md图床问题\"><a href=\"#md图床问题\" class=\"headerlink\" title=\"md图床问题\"></a>md图床问题</h1><p>Markdown使用图床很方便，我现在用的图床是SMMS，暂时没多大问题，但前期做好备份还是有备无患。因此，最好的解决方案是先将图片保存到本地目录，写完push至github后，结合Action自动读取md源文件，并将图片链接转换为图床链接，再完成hexo渲染。</p>\n<p>python转换代码如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> argparse</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> argparse</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">smms_upload</span>(<span class=\"params\">img</span>):</span></span><br><span class=\"line\">    <span class=\"comment\"># 判断图片是否大于5M</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(img, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> img_file:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.getsize(img) &lt; <span class=\"number\">5</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>:</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                smms_url = <span class=\"string\">&#x27;https://sm.ms/api/v2/upload&#x27;</span></span><br><span class=\"line\">                response = requests.post(</span><br><span class=\"line\">                    smms_url,</span><br><span class=\"line\">                    files=&#123;<span class=\"string\">&#x27;smfile&#x27;</span>: img_file, <span class=\"string\">&#x27;format&#x27;</span>: <span class=\"string\">&#x27;json&#x27;</span>&#125;,</span><br><span class=\"line\">                    headers=&#123;<span class=\"string\">&#x27;Authorization&#x27;</span>: smms_token&#125;</span><br><span class=\"line\">                )</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;upload finish&quot;</span>)</span><br><span class=\"line\">                img_new_url = json.loads(response.text)</span><br><span class=\"line\">                cloud_path = img_new_url[<span class=\"string\">&#x27;data&#x27;</span>][<span class=\"string\">&#x27;url&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">return</span> cloud_path</span><br><span class=\"line\">            <span class=\"keyword\">except</span> BaseException <span class=\"keyword\">as</span> err:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;error in upload to smms:<span class=\"subst\">&#123;err&#125;</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;err in upload, image size is more than 5M&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">convert2url</span>(<span class=\"params\">file_path</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_path, <span class=\"string\">&#x27;r&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        lines = f.readlines()</span><br><span class=\"line\"></span><br><span class=\"line\">    outs = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> lines:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> re.search(<span class=\"string\">&#x27;\\!\\[.*\\)&#x27;</span>, line) <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            images_offline = re.findall(<span class=\"string\">&#x27;\\!\\[.*\\)&#x27;</span>, line)  <span class=\"comment\"># 找到每段中所有的图片本地链接</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> images_offline:</span><br><span class=\"line\">                <span class=\"comment\"># 对每个链接进行替换</span></span><br><span class=\"line\">                img_path = re.search(<span class=\"string\">&#x27;(?&lt;=\\()(.+?)(?=\\))&#x27;</span>, item).group()</span><br><span class=\"line\">                <span class=\"comment\"># 判断图片路径是否为网络路径</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> re.search(<span class=\"string\">&#x27;[a-zA-z]+://[^\\s]*&#x27;</span>, img_path) <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">                    img_file = os.path.join(path_md, img_path)</span><br><span class=\"line\">                    images_online = smms_upload(img_file)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> images_online <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">                        line = line.replace(img_path, images_online)</span><br><span class=\"line\">                        outs.append(line)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            outs.append(line)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_path, <span class=\"string\">&#x27;w&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.writelines(outs)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    ap = argparse.ArgumentParser()</span><br><span class=\"line\">    ap.add_argument(<span class=\"string\">&quot;-p&quot;</span>, <span class=\"string\">&quot;--path&quot;</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&quot;the path of your post file&quot;</span>)</span><br><span class=\"line\">    ap.add_argument(<span class=\"string\">&quot;-t&quot;</span>, <span class=\"string\">&quot;--token&quot;</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&quot;the token of your smms count&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    args = ap.parse_args()</span><br><span class=\"line\">    path_md = args.path</span><br><span class=\"line\">    smms_token = args.token</span><br><span class=\"line\"></span><br><span class=\"line\">    md_list = os.listdir(path_md)</span><br><span class=\"line\">    md_list = [item <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> md_list <span class=\"keyword\">if</span> item.endswith(<span class=\"string\">&#x27;md&#x27;</span>)]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> md_list:</span><br><span class=\"line\">        file_path = os.path.join(path_md, item)</span><br><span class=\"line\">        convert2url(file_path)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Github-Action自动部署\"><a href=\"#Github-Action自动部署\" class=\"headerlink\" title=\"Github Action自动部署\"></a>Github Action自动部署</h1><p>每次部署在本地hexo g -d，只是在本地构建文件再提交，github只充当了一个静态服务器的作用，没有起到git的作用，因此使用Github Action可以实现自动化部署，且可以实现图床链接的替换。</p>\n<p>在<code>.github</code>目录下新建文件夹<code>.workflows</code>，再新建文件<code>deployment.yml</code>，代码如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Hexo</span> <span class=\"string\">Auto-Deploy</span></span><br><span class=\"line\"><span class=\"attr\">on:</span> [<span class=\"string\">push</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">repalce_image:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">md</span> <span class=\"string\">images</span> <span class=\"string\">replace</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"number\">1</span><span class=\"string\">.</span> <span class=\"string\">git</span> <span class=\"string\">checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2.4.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"number\">2</span><span class=\"string\">.</span> <span class=\"string\">setup</span> <span class=\"string\">python</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2.3.1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"string\">&quot;3.8.x&quot;</span></span><br><span class=\"line\">          <span class=\"attr\">architecture:</span> <span class=\"string\">&quot;x64&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"number\">3</span><span class=\"string\">.</span> <span class=\"string\">setup</span> <span class=\"string\">and</span> <span class=\"string\">run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          pip install requests</span></span><br><span class=\"line\"><span class=\"string\">          sudo apt install tree</span></span><br><span class=\"line\"><span class=\"string\">          tree source/</span></span><br><span class=\"line\"><span class=\"string\">          python convert_img2url.py -p source/_posts -t &quot;$&#123;&#123; secrets.SMMS_TOKEN &#125;&#125;&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"number\">4</span><span class=\"string\">.</span> <span class=\"string\">install</span> <span class=\"string\">hexo...</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          npm install hexo-cli -g</span></span><br><span class=\"line\"><span class=\"string\">          npm install</span></span><br><span class=\"line\"><span class=\"string\">          npm list --depth 0</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"number\">5</span><span class=\"string\">.</span> <span class=\"string\">hexo</span> <span class=\"string\">generate</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          hexo clean</span></span><br><span class=\"line\"><span class=\"string\">          hexo g</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"number\">6</span><span class=\"string\">.</span> <span class=\"string\">hexo</span> <span class=\"string\">deploy</span> <span class=\"string\">...</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          mkdir -p ~/.ssh/</span></span><br><span class=\"line\"><span class=\"string\">          echo &quot;$&#123;&#123; secrets.ACCESS_TOKEN &#125;&#125;&quot; &gt; ~/.ssh/id_rsa</span></span><br><span class=\"line\"><span class=\"string\">          chmod 600 ~/.ssh/id_rsa</span></span><br><span class=\"line\"><span class=\"string\">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">&quot;zrtty1998&quot;</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">&quot;zrtty1998@gmail.com&quot;</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">core.quotepath</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"string\">hexo</span> <span class=\"string\">d</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"负载均衡\"><a href=\"#负载均衡\" class=\"headerlink\" title=\"负载均衡\"></a>负载均衡</h1><h2 id=\"HTTP重定向\"><a href=\"#HTTP重定向\" class=\"headerlink\" title=\"HTTP重定向\"></a>HTTP重定向</h2><p>HTTP重定向通过一台服务器根据用户的HTTP请求计算出真实服务器地址，将该地址返回到重定向响应中返回给用户。这种负载均衡方案较简单，缺点如下：</p>\n<ul>\n<li>浏览器需两次请求才能完成一次访问</li>\n<li>重定向服务器本身可能会成为瓶颈</li>\n<li>HTTP返回码302重定向，可能使搜索引擎判断SEO作弊</li>\n</ul>\n<p><img src=\"%E5%8D%9A%E5%AE%A2%E6%96%BD%E5%B7%A5%E8%AE%B0%E5%BD%95/image-20220122110959737.png\" alt=\"image-20220122110959737\"></p>\n<h2 id=\"DNS负载均衡\"><a href=\"#DNS负载均衡\" class=\"headerlink\" title=\"DNS负载均衡\"></a>DNS负载均衡</h2><p>DNS负载均衡是使用DNS服务器对同一域名配置多条A记录，每次域名解析请求都会根据对应的负载均衡算法计算出一个不同的IP地址并返回。其结构类似HTTP负载均衡，只不过将请求步骤交给了DNS服务器。</p>\n<p>该方法有如下优点：</p>\n<ul>\n<li>负载均衡任务交给DNS服务器，较为方便。</li>\n<li>部署在服务器上的应用不需要任何配置。</li>\n<li>服务器可以位于互联网任何位置。</li>\n<li>DNS支持基于地理位置的域名解析，即将根据用户所在地理位置，将域名解析成距离最近的一个服务器地址，加速用户访问。</li>\n</ul>\n<p>同时该方案也存在如下缺点：</p>\n<ul>\n<li>DNS是多级解析的，每一级都会缓存该条域名的A记录，更新记录生效需要较长时间。</li>\n<li>不能按照服务器的处理能力来分配负载，DNS负载均衡采用的是简单的轮询算法，因此其负载均衡的效果不太好。</li>\n<li>为保证DNS数据即时更新，使地址能随机分配，一般需要将DNS刷新时间设置较小，但会导致DNS流量大增造成其他问题。</li>\n</ul>\n<h1 id=\"博客美化\"><a href=\"#博客美化\" class=\"headerlink\" title=\"博客美化\"></a>博客美化</h1><h2 id=\"代码块美化\"><a href=\"#代码块美化\" class=\"headerlink\" title=\"代码块美化\"></a>代码块美化</h2><p>自带的代码块显示没有高亮，也没有一键复制的功能。因此着手添加这两项功能。</p>\n<p>首先注意到hexo已经内部集成了highlight.js和prismjs。</p>"},{"title":"pip与conda换源","reprint":false,"date":"2022-02-14T03:10:52.000Z","updated":"2022-02-14T03:10:52.000Z","conver":null,"_content":"\n<!--more-->\n\n# conda\n\n## linux\n\n修改`~/.condarc`\n\n```\nchannels:\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/\nssl_verify: true\n```\n\n\n\n## windows\n\nwindows用户需先执行`conda config --set show_channel_urls yes`，生成`.condarc`文件，再进行修改\n\n# pip\n\n阿里云 http://mirrors.aliyun.com/pypi/simple/ \n中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/ \n豆瓣(douban) http://pypi.douban.com/simple/ \n清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/ \n中国科学技术大学 http://pypi.mirrors.ustc.edu.cn/simple/\n\n## linux\n\n**临时换源：**\n\npip后加-i，指定pip源\n\n**永久换源：**\n\n修改`~/.pip/pip.conf`\n\n```\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n## windows\n\n在user目录新建pip目录，路径为`C:\\User\\xx\\pip\\pip.ini`\n\n```\n[global]\ntimeout = 6000\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\ntrusted-host = pypi.tuna.tsinghua.edu.cn\n```\n\n","source":"_posts/pip与conda换源.md","raw":"---\ntitle: pip与conda换源\nreprint: false\ndate: 2022-02-14 11:10:52\nupdated: 2022-02-14 11:10:52\nconver:\ncategories: 环境搭建\ntags:\n  - pip\n  - conda\n---\n\n<!--more-->\n\n# conda\n\n## linux\n\n修改`~/.condarc`\n\n```\nchannels:\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/\nssl_verify: true\n```\n\n\n\n## windows\n\nwindows用户需先执行`conda config --set show_channel_urls yes`，生成`.condarc`文件，再进行修改\n\n# pip\n\n阿里云 http://mirrors.aliyun.com/pypi/simple/ \n中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/ \n豆瓣(douban) http://pypi.douban.com/simple/ \n清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/ \n中国科学技术大学 http://pypi.mirrors.ustc.edu.cn/simple/\n\n## linux\n\n**临时换源：**\n\npip后加-i，指定pip源\n\n**永久换源：**\n\n修改`~/.pip/pip.conf`\n\n```\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n## windows\n\n在user目录新建pip目录，路径为`C:\\User\\xx\\pip\\pip.ini`\n\n```\n[global]\ntimeout = 6000\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\ntrusted-host = pypi.tuna.tsinghua.edu.cn\n```\n\n","slug":"pip与conda换源","published":1,"_id":"ckzm4vwez000044wzgzri9all","comments":1,"layout":"post","photos":[],"link":"","content":"<span id=\"more\"></span>\n\n<h1 id=\"conda\"><a href=\"#conda\" class=\"headerlink\" title=\"conda\"></a>conda</h1><h2 id=\"linux\"><a href=\"#linux\" class=\"headerlink\" title=\"linux\"></a>linux</h2><p>修改<code>~/.condarc</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">channels:</span><br><span class=\"line\">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class=\"line\">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class=\"line\">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span><br><span class=\"line\">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/</span><br><span class=\"line\">ssl_verify: true</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"windows\"><a href=\"#windows\" class=\"headerlink\" title=\"windows\"></a>windows</h2><p>windows用户需先执行<code>conda config --set show_channel_urls yes</code>，生成<code>.condarc</code>文件，再进行修改</p>\n<h1 id=\"pip\"><a href=\"#pip\" class=\"headerlink\" title=\"pip\"></a>pip</h1><p>阿里云 <a href=\"http://mirrors.aliyun.com/pypi/simple/\">http://mirrors.aliyun.com/pypi/simple/</a><br>中国科技大学 <a href=\"https://pypi.mirrors.ustc.edu.cn/simple/\">https://pypi.mirrors.ustc.edu.cn/simple/</a><br>豆瓣(douban) <a href=\"http://pypi.douban.com/simple/\">http://pypi.douban.com/simple/</a><br>清华大学 <a href=\"https://pypi.tuna.tsinghua.edu.cn/simple/\">https://pypi.tuna.tsinghua.edu.cn/simple/</a><br>中国科学技术大学 <a href=\"http://pypi.mirrors.ustc.edu.cn/simple/\">http://pypi.mirrors.ustc.edu.cn/simple/</a></p>\n<h2 id=\"linux-1\"><a href=\"#linux-1\" class=\"headerlink\" title=\"linux\"></a>linux</h2><p><strong>临时换源：</strong></p>\n<p>pip后加-i，指定pip源</p>\n<p><strong>永久换源：</strong></p>\n<p>修改<code>~/.pip/pip.conf</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[global]</span><br><span class=\"line\">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"windows-1\"><a href=\"#windows-1\" class=\"headerlink\" title=\"windows\"></a>windows</h2><p>在user目录新建pip目录，路径为<code>C:\\User\\xx\\pip\\pip.ini</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[global]</span><br><span class=\"line\">timeout = 6000</span><br><span class=\"line\">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">trusted-host = pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"conda\"><a href=\"#conda\" class=\"headerlink\" title=\"conda\"></a>conda</h1><h2 id=\"linux\"><a href=\"#linux\" class=\"headerlink\" title=\"linux\"></a>linux</h2><p>修改<code>~/.condarc</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">channels:</span><br><span class=\"line\">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class=\"line\">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class=\"line\">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span><br><span class=\"line\">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/</span><br><span class=\"line\">ssl_verify: true</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"windows\"><a href=\"#windows\" class=\"headerlink\" title=\"windows\"></a>windows</h2><p>windows用户需先执行<code>conda config --set show_channel_urls yes</code>，生成<code>.condarc</code>文件，再进行修改</p>\n<h1 id=\"pip\"><a href=\"#pip\" class=\"headerlink\" title=\"pip\"></a>pip</h1><p>阿里云 <a href=\"http://mirrors.aliyun.com/pypi/simple/\">http://mirrors.aliyun.com/pypi/simple/</a><br>中国科技大学 <a href=\"https://pypi.mirrors.ustc.edu.cn/simple/\">https://pypi.mirrors.ustc.edu.cn/simple/</a><br>豆瓣(douban) <a href=\"http://pypi.douban.com/simple/\">http://pypi.douban.com/simple/</a><br>清华大学 <a href=\"https://pypi.tuna.tsinghua.edu.cn/simple/\">https://pypi.tuna.tsinghua.edu.cn/simple/</a><br>中国科学技术大学 <a href=\"http://pypi.mirrors.ustc.edu.cn/simple/\">http://pypi.mirrors.ustc.edu.cn/simple/</a></p>\n<h2 id=\"linux-1\"><a href=\"#linux-1\" class=\"headerlink\" title=\"linux\"></a>linux</h2><p><strong>临时换源：</strong></p>\n<p>pip后加-i，指定pip源</p>\n<p><strong>永久换源：</strong></p>\n<p>修改<code>~/.pip/pip.conf</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[global]</span><br><span class=\"line\">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"windows-1\"><a href=\"#windows-1\" class=\"headerlink\" title=\"windows\"></a>windows</h2><p>在user目录新建pip目录，路径为<code>C:\\User\\xx\\pip\\pip.ini</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[global]</span><br><span class=\"line\">timeout = 6000</span><br><span class=\"line\">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">trusted-host = pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckzi2bho30001aswzbb5cgoar","category_id":"ckzi2bho80004aswz0o4rc3um","_id":"ckzi2bhoa0009aswzf893epvs"},{"post_id":"ckzi2bho60003aswzf95ebcdu","category_id":"ckzi2bho90006aswzfa4c21il","_id":"ckzi2bhob000baswzf6eo3sz8"},{"post_id":"ckzi2bhob000easwzgrok6lrf","category_id":"ckzi2bho90006aswzfa4c21il","_id":"ckzi2bhoc000gaswzgltm0mhn"},{"post_id":"ckzm4vwez000044wzgzri9all","category_id":"ckzi2bho90006aswzfa4c21il","_id":"ckzm4vwf8000244wzenf12kis"}],"PostTag":[{"post_id":"ckzi2bho30001aswzbb5cgoar","tag_id":"ckzi2bho90005aswzcp492hoq","_id":"ckzi2bhoa0008aswz0wbg4t9m"},{"post_id":"ckzi2bho60003aswzf95ebcdu","tag_id":"ckzi2bhoa0007aswz4mou8drt","_id":"ckzi2bhob000caswz5z7kearv"},{"post_id":"ckzi2bho60003aswzf95ebcdu","tag_id":"ckzi2bhoa000aaswzfyuh0slk","_id":"ckzi2bhob000daswzbj2mfif8"},{"post_id":"ckzi2bhob000easwzgrok6lrf","tag_id":"ckzi2bhoc000faswz2wns8rwg","_id":"ckzi2bhod000jaswz4c4jfi48"},{"post_id":"ckzi2bhob000easwzgrok6lrf","tag_id":"ckzi2bhoc000haswz08554n5u","_id":"ckzi2bhod000kaswz17oad2qq"},{"post_id":"ckzi2bhob000easwzgrok6lrf","tag_id":"ckzi2bhod000iaswz9nl0aedn","_id":"ckzi2bhod000laswzhd0kht26"},{"post_id":"ckzm4vwez000044wzgzri9all","tag_id":"ckzm4vwf6000144wzhwdkf8g5","_id":"ckzm4vwf9000444wz7zc74lne"},{"post_id":"ckzm4vwez000044wzgzri9all","tag_id":"ckzm4vwf8000344wz7bg3ek91","_id":"ckzm4vwfa000544wz02xignf5"}],"Tag":[{"name":"健身","_id":"ckzi2bho90005aswzcp492hoq"},{"name":"mmdetection","_id":"ckzi2bhoa0007aswz4mou8drt"},{"name":"目标检测","_id":"ckzi2bhoa000aaswzfyuh0slk"},{"name":"hexo","_id":"ckzi2bhoc000faswz2wns8rwg"},{"name":"Github Actions","_id":"ckzi2bhoc000haswz08554n5u"},{"name":"blog","_id":"ckzi2bhod000iaswz9nl0aedn"},{"name":"pip","_id":"ckzm4vwf6000144wzhwdkf8g5"},{"name":"conda","_id":"ckzm4vwf8000344wz7bg3ek91"}]}}